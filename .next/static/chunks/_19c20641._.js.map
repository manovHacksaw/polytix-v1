{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props} />)\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props} />)\n  );\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,mKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;KAVS;AAYT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,mKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,mKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,mKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardAction({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}) {\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props} />)\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS;AAeT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;MALS;AAOT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/skeleton.jsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props} />)\n  );\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;KAVS","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    (<Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props} />)\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAdS","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({\n  className,\n  type,\n  ...props\n}) {\n  return (\n    (<input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/label.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}) {\n  return (\n    (<LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,oKAAA,CAAA,OAAmB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}) {\n  return (\n    (<SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACG,6LAAC,wKAAA,CAAA,OAAuB;QACvB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/tooltip.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}) {\n  return (<TooltipPrimitive.Provider data-slot=\"tooltip-provider\" delayDuration={delayDuration} {...props} />);\n}\n\nfunction Tooltip({\n  ...props\n}) {\n  return (\n    (<TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>)\n  );\n}\n\nfunction TooltipTrigger({\n  ...props\n}) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}) {\n  return (\n    (<TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}>\n        {children}\n        <TooltipPrimitive.Arrow\n          className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>)\n  );\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,gBAAgB,EACvB,gBAAgB,CAAC,EACjB,GAAG,OACJ;IACC,qBAAQ,6LAAC,sKAAA,CAAA,WAAyB;QAAC,aAAU;QAAmB,eAAe;QAAgB,GAAG,KAAK;;;;;;AACzG;KALS;AAOT,SAAS,QAAQ,EACf,GAAG,OACJ;IACC,qBACG,6LAAC;kBACA,cAAA,6LAAC,sKAAA,CAAA,OAAqB;YAAC,aAAU;YAAW,GAAG,KAAK;;;;;;;;;;;AAG1D;MARS;AAUT,SAAS,eAAe,EACtB,GAAG,OACJ;IACC,qBAAO,6LAAC,sKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;MAJS;AAMT,SAAS,eAAe,EACtB,SAAS,EACT,aAAa,CAAC,EACd,QAAQ,EACR,GAAG,OACJ;IACC,qBACG,6LAAC,sKAAA,CAAA,SAAuB;kBACvB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,YAAY;YACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0aACA;YAED,GAAG,KAAK;;gBACR;8BACD,6LAAC,sKAAA,CAAA,QAAsB;oBACrB,WAAU;;;;;;;;;;;;;;;;;AAIpB;MAtBS","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/activity/_components/notification-item.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { formatDistanceToNow } from \"date-fns\"\nimport { Bell, Calendar, Check, ChevronDown, ChevronRight, Clock, Flag, Trophy, User, UserPlus, Vote, ExternalLink, Bookmark, BookmarkCheck } from 'lucide-react'\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { formatAddress } from \"@/lib/utils\"\n\n// Define NotificationType enum\nconst NotificationType = {\n  CAMPAIGN_CREATED: 0,\n  CAMPAIGN_STARTED: 1,\n  CAMPAIGN_ENDED: 2,\n  VOTE_CAST: 3,\n  VOTE_RECEIVED: 4,\n  USER_REGISTERED: 5,\n  CANDIDATE_REGISTERED: 6\n}\n\nexport default function NotificationItem({ notification, isRead = false, onMarkAsRead }) {\n  const [expanded, setExpanded] = useState(false)\n\n  const getNotificationIcon = () => {\n    switch (notification.notificationType) {\n      case NotificationType.CAMPAIGN_CREATED:\n        return <Calendar className=\"h-5 w-5 text-blue-500\" />\n      case NotificationType.CAMPAIGN_STARTED:\n        return <Flag className=\"h-5 w-5 text-green-500\" />\n      case NotificationType.CAMPAIGN_ENDED:\n        return <Trophy className=\"h-5 w-5 text-purple-500\" />\n      case NotificationType.VOTE_CAST:\n        return <Vote className=\"h-5 w-5 text-indigo-500\" />\n      case NotificationType.VOTE_RECEIVED:\n        return <Check className=\"h-5 w-5 text-green-500\" />\n      case NotificationType.USER_REGISTERED:\n        return <User className=\"h-5 w-5 text-blue-500\" />\n      case NotificationType.CANDIDATE_REGISTERED:\n        return <UserPlus className=\"h-5 w-5 text-orange-500\" />\n      default:\n        return <Bell className=\"h-5 w-5 text-gray-500\" />\n    }\n  }\n\n  const getNotificationTitle = () => {\n    switch (notification.notificationType) {\n      case NotificationType.CAMPAIGN_CREATED:\n        return \"Campaign Created\"\n      case NotificationType.CAMPAIGN_STARTED:\n        return \"Campaign Started\"\n      case NotificationType.CAMPAIGN_ENDED:\n        return \"Campaign Ended\"\n      case NotificationType.VOTE_CAST:\n        return \"Vote Cast\"\n      case NotificationType.VOTE_RECEIVED:\n        return \"Vote Received\"\n      case NotificationType.USER_REGISTERED:\n        return \"Registered as Voter\"\n      case NotificationType.CANDIDATE_REGISTERED:\n        return \"Registered as Candidate\"\n      default:\n        return \"Notification\"\n    }\n  }\n\n  const getNotificationDescription = () => {\n    switch (notification.notificationType) {\n      case NotificationType.CAMPAIGN_CREATED:\n        return `Campaign #${notification.campaignId} was created`\n      case NotificationType.CAMPAIGN_STARTED:\n        return `Campaign #${notification.campaignId} has started`\n      case NotificationType.CAMPAIGN_ENDED:\n        return `Campaign #${notification.campaignId} has ended`\n      case NotificationType.VOTE_CAST:\n        return `A vote was cast in campaign #${notification.campaignId}`\n      case NotificationType.VOTE_RECEIVED:\n        return `A vote was received in campaign #${notification.campaignId}`\n      case NotificationType.USER_REGISTERED:\n        return `A voter registered in campaign #${notification.campaignId}`\n      case NotificationType.CANDIDATE_REGISTERED:\n        return `A candidate registered in campaign #${notification.campaignId}`\n      default:\n        return notification.data || \"No additional information\"\n    }\n  }\n\n  const getRelatedEntityText = () => {\n    switch (notification.notificationType) {\n      case NotificationType.VOTE_CAST:\n        return `Voted for option #${notification.relatedEntityId}`\n      case NotificationType.VOTE_RECEIVED:\n        return `Received vote as candidate #${notification.relatedEntityId}`\n      default:\n        return notification.relatedEntityId ? `Related ID: ${notification.relatedEntityId}` : null\n    }\n  }\n\n  const getNotificationBadge = () => {\n    switch (notification.notificationType) {\n      case NotificationType.CAMPAIGN_CREATED:\n        return <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-600 border-blue-200\">Created</Badge>\n      case NotificationType.CAMPAIGN_STARTED:\n        return <Badge variant=\"outline\" className=\"bg-green-50 text-green-600 border-green-200\">Started</Badge>\n      case NotificationType.CAMPAIGN_ENDED:\n        return <Badge variant=\"outline\" className=\"bg-purple-50 text-purple-600 border-purple-200\">Ended</Badge>\n      case NotificationType.VOTE_CAST:\n        return <Badge variant=\"outline\" className=\"bg-indigo-50 text-indigo-600 border-indigo-200\">Voted</Badge>\n      case NotificationType.VOTE_RECEIVED:\n        return <Badge variant=\"outline\" className=\"bg-green-50 text-green-600 border-green-200\">Received</Badge>\n      case NotificationType.USER_REGISTERED:\n        return <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-600 border-blue-200\">Registered</Badge>\n      case NotificationType.CANDIDATE_REGISTERED:\n        return <Badge variant=\"outline\" className=\"bg-orange-50 text-orange-600 border-orange-200\">Candidate</Badge>\n      default:\n        return null\n    }\n  }\n\n  const getActionButton = () => {\n    switch (notification.notificationType) {\n      case NotificationType.CAMPAIGN_CREATED:\n      case NotificationType.CAMPAIGN_STARTED:\n      case NotificationType.CAMPAIGN_ENDED:\n        return (\n          <Link href={`/campaigns/${notification.campaignId}`}>\n            <Button variant=\"outline\" size=\"sm\" className=\"gap-1\">\n              <span>View Campaign</span>\n              <ExternalLink className=\"h-3 w-3\" />\n            </Button>\n          </Link>\n        )\n      case NotificationType.VOTE_CAST:\n        return (\n          <Link href={`/campaigns/${notification.campaignId}/results`}>\n            <Button variant=\"outline\" size=\"sm\" className=\"gap-1\">\n              <span>View Results</span>\n              <ExternalLink className=\"h-3 w-3\" />\n            </Button>\n          </Link>\n        )\n      case NotificationType.USER_REGISTERED:\n      case NotificationType.CANDIDATE_REGISTERED:\n        return (\n          <Link href={`/campaigns/${notification.campaignId}`}>\n            <Button variant=\"outline\" size=\"sm\" className=\"gap-1\">\n              <span>Go to Campaign</span>\n              <ExternalLink className=\"h-3 w-3\" />\n            </Button>\n          </Link>\n        )\n      default:\n        return null\n    }\n  }\n\n  const handleExpand = () => {\n    setExpanded(!expanded)\n    if (!isRead && onMarkAsRead) {\n      onMarkAsRead()\n    }\n  }\n\n  const formattedTime = formatDistanceToNow(new Date(notification.timestamp), { addSuffix: true })\n\n  return (\n    <Card className={`overflow-hidden transition-all duration-200 hover:shadow-md ${expanded ? 'border-primary/20' : ''} ${!isRead ? 'border-l-4 border-l-primary' : ''}`}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start gap-4\">\n          <div className={`mt-1 rounded-full p-2 ${!isRead ? 'bg-primary/10' : 'bg-muted'}`}>\n            {getNotificationIcon()}\n          </div>\n\n          <div className=\"flex-1 space-y-1\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <h4 className=\"font-medium\">{getNotificationTitle()}</h4>\n                {getNotificationBadge() && <div className=\"hidden sm:block\">{getNotificationBadge()}</div>}\n                {!isRead && (\n                  <Badge variant=\"default\" className=\"h-5 px-1\">New</Badge>\n                )}\n              </div>\n              <TooltipProvider>\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <div className=\"flex items-center text-xs text-muted-foreground\">\n                      <Clock className=\"h-3 w-3 mr-1\" />\n                      {formattedTime}\n                    </div>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    {new Date(notification.timestamp).toLocaleString()}\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n            </div>\n            \n            <p className=\"text-sm text-muted-foreground\">{getNotificationDescription()}</p>\n\n            {expanded && (\n              <div className=\"mt-3 pt-3 border-t text-sm space-y-2 bg-muted/5 p-3 rounded-md\">\n                {notification.data && (\n                  <div>\n                    <span className=\"font-medium\">Details:</span> {notification.data}\n                  </div>\n                )}\n\n                {getRelatedEntityText() && (\n                  <div>\n                    <span className=\"font-medium\">Entity:</span> {getRelatedEntityText()}\n                  </div>\n                )}\n\n                <div>\n                  <span className=\"font-medium\">Campaign:</span>{\" \"}\n                  <Link href={`/campaigns/${notification.campaignId}`} className=\"text-primary hover:underline\">\n                    #{notification.campaignId}\n                  </Link>\n                </div>\n\n                <div>\n                  <span className=\"font-medium\">Time:</span> {new Date(notification.timestamp).toLocaleString()}\n                </div>\n\n                <div>\n                  <span className=\"font-medium\">User:</span>{\" \"}\n                  <span className=\"font-mono text-xs bg-muted p-1 rounded\">\n                    {formatAddress(notification.userAddress)}\n                  </span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center justify-between mt-2 pt-1\">\n              <div className=\"flex gap-2\">\n                {getActionButton()}\n                \n                {!isRead && onMarkAsRead && (\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\" \n                    onClick={onMarkAsRead}\n                    className=\"gap-1\"\n                  >\n                    <BookmarkCheck className=\"h-4 w-4\" />\n                    <span className=\"text-xs\">Mark read</span>\n                  </Button>\n                )}\n              </div>\n\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={handleExpand} \n                className={`ml-auto ${expanded ? 'text-primary' : ''}`}\n              >\n                {expanded ? (\n                  <>\n                    <span className=\"text-xs\">Less details</span>\n                    <ChevronDown className=\"h-4 w-4 ml-1\" />\n                  </>\n                ) : (\n                  <>\n                    <span className=\"text-xs\">More details</span>\n                    <ChevronRight className=\"h-4 w-4 ml-1\" />\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1215, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/activity/_components/empty-state.jsx"],"sourcesContent":["\"use client\"\n\nimport { Bell, Calendar, User, Vote, Flag } from 'lucide-react'\nimport { Button } from \"@/components/ui/button\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\n\nexport default function EmptyState({ type }) {\n  const getIcon = () => {\n    switch (type) {\n      case \"campaigns\":\n        return <Calendar className=\"h-16 w-16 text-muted-foreground/30\" />\n      case \"votes\":\n        return <Vote className=\"h-16 w-16 text-muted-foreground/30\" />\n      case \"registrations\":\n        return <User className=\"h-16 w-16 text-muted-foreground/30\" />\n      default:\n        return <Bell className=\"h-16 w-16 text-muted-foreground/30\" />\n    }\n  }\n\n  const getMessage = () => {\n    switch (type) {\n      case \"campaigns\":\n        return \"You haven't created or participated in any campaigns yet\"\n      case \"votes\":\n        return \"You haven't cast or received any votes yet\"\n      case \"registrations\":\n        return \"You haven't registered for any campaigns yet\"\n      default:\n        return \"You don't have any notifications yet\"\n    }\n  }\n\n  const getActionText = () => {\n    switch (type) {\n      case \"campaigns\":\n        return \"Create a Campaign\"\n      case \"votes\":\n      case \"registrations\":\n        return \"Browse Campaigns\"\n      default:\n        return \"Explore Campaigns\"\n    }\n  }\n\n  const getActionLink = () => {\n    switch (type) {\n      case \"campaigns\":\n        return \"/campaigns/create\"\n      default:\n        return \"/campaigns\"\n    }\n  }\n\n  const getSubtitle = () => {\n    switch (type) {\n      case \"campaigns\":\n        return \"Start your own campaign or join existing ones\"\n      case \"votes\":\n        return \"Participate in active campaigns to see your voting activity\"\n      case \"registrations\":\n        return \"Register for campaigns to start participating\"\n      default:\n        return \"Your activity will appear here once you start participating\"\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center py-12 text-center rounded-lg border border-dashed border-muted-foreground/20 bg-muted/5\">\n      <div className=\"bg-background/80 rounded-full p-4 shadow-sm\">\n        {getIcon()}\n      </div>\n      <h3 className=\"mt-4 text-lg font-medium\">No {type === \"all\" ? \"activity\" : type} found</h3>\n      <p className=\"mt-1 text-sm text-muted-foreground max-w-sm\">{getMessage()}</p>\n      <p className=\"text-xs text-muted-foreground/70 mt-1 max-w-xs\">{getSubtitle()}</p>\n      <Link href={getActionLink()}>\n        <Button className=\"mt-6 gap-2\">\n          {type === \"campaigns\" && <Flag className=\"h-4 w-4\" />}\n          {getActionText()}\n        </Button>\n      </Link>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;;;;;;AAOe,SAAS,WAAW,EAAE,IAAI,EAAE;IACzC,MAAM,UAAU;QACd,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,6MAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;YAC7B,KAAK;gBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB,KAAK;gBACH,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,MAAM,aAAa;QACjB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,gBAAgB;QACpB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;YACL,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,gBAAgB;QACpB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,cAAc;QAClB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ;;;;;;0BAEH,6LAAC;gBAAG,WAAU;;oBAA2B;oBAAI,SAAS,QAAQ,aAAa;oBAAK;;;;;;;0BAChF,6LAAC;gBAAE,WAAU;0BAA+C;;;;;;0BAC5D,6LAAC;gBAAE,WAAU;0BAAkD;;;;;;0BAC/D,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAM;0BACV,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBAAC,WAAU;;wBACf,SAAS,6BAAe,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;wBACxC;;;;;;;;;;;;;;;;;;AAKX;KA7EwB","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/activity/_components/activity-group-header.jsx"],"sourcesContent":["import { ChevronDown, ChevronRight } from 'lucide-react'\nimport { useState } from \"react\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\n\nexport default function ActivityGroupHeader({ title, count, isSecondary = false }) {\n  const [collapsed, setCollapsed] = useState(false)\n  \n  return (\n    <div className={`flex items-center justify-between ${isSecondary ? 'pl-4' : ''}`}>\n      <div className=\"flex items-center gap-2\">\n        <Button \n          variant=\"ghost\" \n          size=\"sm\" \n          className=\"p-1 h-auto\"\n          onClick={() => setCollapsed(!collapsed)}\n        >\n          {collapsed ? (\n            <ChevronRight className=\"h-4 w-4\" />\n          ) : (\n            <ChevronDown className=\"h-4 w-4\" />\n          )}\n        </Button>\n        <h3 className={`font-medium ${isSecondary ? 'text-sm text-muted-foreground' : ''}`}>\n          {title}\n        </h3>\n        <Badge variant=\"outline\">{count}</Badge>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEe,SAAS,oBAAoB,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,KAAK,EAAE;;IAC/E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,6LAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,cAAc,SAAS,IAAI;kBAC9E,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,8HAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,WAAU;oBACV,SAAS,IAAM,aAAa,CAAC;8BAE5B,0BACC,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;6CAExB,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;;;;;;8BAG3B,6LAAC;oBAAG,WAAW,CAAC,YAAY,EAAE,cAAc,kCAAkC,IAAI;8BAC/E;;;;;;8BAEH,6LAAC,6HAAA,CAAA,QAAK;oBAAC,SAAQ;8BAAW;;;;;;;;;;;;;;;;;AAIlC;GAzBwB;KAAA","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/activity/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from \"react\"\nimport { useContract } from \"@/context/contract-context\"\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Input } from \"@/components/ui/input\"\nimport { Bell, Filter, RefreshCw, AlertCircle, Search, ChevronUp, ChevronDown, CalendarClock, AlertTriangle, Clock, User, Download, Settings, Bookmark, BookmarkCheck } from 'lucide-react'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuCheckboxItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n  DropdownMenuItem\n} from \"@/components/ui/dropdown-menu\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { useToast } from \"@/components/ui/use-toast\"\nimport NotificationItem from \"./_components/notification-item\"\nimport EmptyState from \"./_components/empty-state\"\nimport ActivityGroupHeader from \"./_components/activity-group-header\"\nimport { exportToCsv } from \"@/lib/export-utils\"\nimport { useLocalStorage } from \"@/hooks/use-local-storage\"\n\n// Define NotificationType enum\nconst NotificationType = {\n  CAMPAIGN_CREATED: 0,\n  CAMPAIGN_STARTED: 1,\n  CAMPAIGN_ENDED: 2,\n  VOTE_CAST: 3,\n  VOTE_RECEIVED: 4,\n  USER_REGISTERED: 5,\n  CANDIDATE_REGISTERED: 6\n}\n\nexport default function ActivityPage() {\n  const { contract, address, isConnected, connectWallet } = useContract()\n  const { toast } = useToast()\n  const [transactions, setTransactions] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [activeTab, setActiveTab] = useState(\"all\")\n  const [viewMode, setViewMode] = useState(\"all\") // \"all\" or \"myActivity\"\n  const [page, setPage] = useState(1)\n  const [hasMore, setHasMore] = useState(true)\n  const [refreshing, setRefreshing] = useState(false)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [sortOrder, setSortOrder] = useState(\"desc\") // desc = newest first, asc = oldest first\n  const [selectedTypes, setSelectedTypes] = useState([\n    \"CAMPAIGN_CREATED\", \n    \"CAMPAIGN_STARTED\", \n    \"CAMPAIGN_ENDED\", \n    \"VOTE_CAST\", \n    \"VOTE_RECEIVED\", \n    \"USER_REGISTERED\", \n    \"CANDIDATE_REGISTERED\"\n  ])\n  const [groupByDate, setGroupByDate] = useLocalStorage(\"activity-group-by-date\", true)\n  const [groupByCampaign, setGroupByCampaign] = useLocalStorage(\"activity-group-by-campaign\", false)\n  const [showReadNotifications, setShowReadNotifications] = useLocalStorage(\"activity-show-read\", true)\n  const [readNotifications, setReadNotifications] = useLocalStorage(\"read-notifications\", [])\n  const [unreadCount, setUnreadCount] = useState(0)\n  const [isWebSocketConnected, setIsWebSocketConnected] = useState(false)\n  const ITEMS_PER_PAGE = 10\n\n  // Function to mark notification as read\n  const markAsRead = useCallback((notificationId) => {\n    if (!readNotifications.includes(notificationId)) {\n      const updatedReadNotifications = [...readNotifications, notificationId]\n      setReadNotifications(updatedReadNotifications)\n    }\n  }, [readNotifications, setReadNotifications])\n\n  // Function to mark all as read\n  const markAllAsRead = useCallback(() => {\n    const allIds = transactions.map(transaction => transaction.id)\n    setReadNotifications([...new Set([...readNotifications, ...allIds])])\n    toast({\n      title: \"All notifications marked as read\",\n      description: `${allIds.length} notifications have been marked as read.`\n    })\n  }, [transactions, readNotifications, setReadNotifications, toast])\n\n  // Calculate unread count\n  useEffect(() => {\n    const unread = transactions.filter(t => !readNotifications.includes(t.id)).length\n    setUnreadCount(unread)\n  }, [transactions, readNotifications])\n\n  // WebSocket connection for real-time updates\n  useEffect(() => {\n    let ws = null\n    \n    if (contract && isConnected) {\n      // This is a mock implementation - in a real app, you'd connect to your WebSocket server\n      try {\n        // Mock WebSocket connection\n        const mockConnect = setTimeout(() => {\n          setIsWebSocketConnected(true)\n          toast({\n            title: \"Real-time updates active\",\n            description: \"You'll receive notifications for new activities as they happen.\"\n          })\n        }, 1500)\n        \n        return () => {\n          clearTimeout(mockConnect)\n          setIsWebSocketConnected(false)\n        }\n      } catch (err) {\n        console.error(\"WebSocket connection error:\", err)\n      }\n    }\n    \n    return () => {\n      if (ws) ws.close()\n    }\n  }, [contract, isConnected, toast])\n\n  const fetchTransactions = async (reset = false) => {\n    if (!contract) {\n      setLoading(false)\n      return\n    }\n    \n    try {\n      const isRefresh = reset && transactions.length > 0\n      if (isRefresh) {\n        setRefreshing(true)\n      } else {\n        setLoading(true)\n      }\n      setError(null)\n\n      const newPage = reset ? 1 : page\n      const offset = (newPage - 1) * ITEMS_PER_PAGE\n\n      let fetchedTransactions = []\n      let totalCount = 0\n\n      if (viewMode === \"myActivity\" && address) {\n        // Get user's notifications with pagination\n        totalCount = await contract.getUserNotificationCount(address)\n        fetchedTransactions = await contract.getUserNotifications(address, offset, ITEMS_PER_PAGE)\n      } else {\n        // In a real implementation, you would call a contract method that returns all transactions\n        // For now, we'll simulate this by getting all notifications\n        try {\n          // This is a mock implementation - in a real app, you'd call the actual contract method\n          totalCount = await contract.getAllTransactionsCount?.() || 100\n          \n          // Mock data for demonstration\n          if (offset < totalCount) {\n            // Simulate fetching transactions from the contract\n            fetchedTransactions = await contract.getUserNotifications(\n              \"0x0000000000000000000000000000000000000000\", \n              offset, \n              ITEMS_PER_PAGE\n            )\n          }\n        } catch (err) {\n          console.error(\"Error fetching all transactions:\", err)\n          // Fallback to user notifications if getAllTransactions is not available\n          totalCount = await contract.getUserNotificationCount(address)\n          fetchedTransactions = await contract.getUserNotifications(address, offset, ITEMS_PER_PAGE)\n        }\n      }\n\n      // Process transactions\n      const processedTransactions = fetchedTransactions.map((transaction) => ({\n        id: Number(transaction.id),\n        userAddress: transaction.userAddress,\n        campaignId: Number(transaction.campaignId),\n        notificationType: Number(transaction.notificationType),\n        timestamp: Number(transaction.timestamp) * 1000, // Convert to milliseconds\n        relatedEntityId: Number(transaction.relatedEntityId),\n        data: transaction.data,\n        isRead: readNotifications.includes(Number(transaction.id))\n      }))\n\n      // Update state\n      if (reset) {\n        setTransactions(processedTransactions)\n      } else {\n        setTransactions((prev) => [...prev, ...processedTransactions])\n      }\n\n      setPage(newPage + 1)\n      setHasMore(offset + ITEMS_PER_PAGE < Number(totalCount))\n      \n    } catch (err) {\n      console.error(\"Error fetching transactions:\", err)\n      setError(\"Failed to load activity data. Please try again.\")\n    } finally {\n      setLoading(false)\n      setRefreshing(false)\n    }\n  }\n\n  useEffect(() => {\n    if (contract) {\n      fetchTransactions(true)\n    } else {\n      setTransactions([])\n      setLoading(false)\n    }\n  }, [contract, viewMode, address])\n\n  const handleRefresh = () => {\n    fetchTransactions(true)\n  }\n\n  const handleLoadMore = () => {\n    if (!loading && hasMore) {\n      fetchTransactions()\n    }\n  }\n\n  const handleSortOrderChange = () => {\n    setSortOrder(sortOrder === \"desc\" ? \"asc\" : \"desc\")\n  }\n\n  const handleTypeToggle = (type) => {\n    setSelectedTypes((current) => \n      current.includes(type) \n        ? current.filter(t => t !== type)\n        : [...current, type]\n    )\n  }\n\n  const resetFilters = () => {\n    setSelectedTypes([\n      \"CAMPAIGN_CREATED\", \n      \"CAMPAIGN_STARTED\", \n      \"CAMPAIGN_ENDED\", \n      \"VOTE_CAST\", \n      \"VOTE_RECEIVED\", \n      \"USER_REGISTERED\", \n      \"CANDIDATE_REGISTERED\"\n    ])\n    setSearchQuery(\"\")\n  }\n\n  const handleExportData = () => {\n    const filteredData = filterTransactions(activeTab)\n    \n    // Format data for CSV\n    const csvData = filteredData.map(transaction => ({\n      ID: transaction.id,\n      Type: Object.keys(NotificationType)[transaction.notificationType],\n      Campaign: transaction.campaignId,\n      User: transaction.userAddress,\n      Timestamp: new Date(transaction.timestamp).toLocaleString(),\n      Details: transaction.data || \"No details\"\n    }))\n    \n    exportToCsv(csvData, `activity-export-${new Date().toISOString().split('T')[0]}`)\n    \n    toast({\n      title: \"Export successful\",\n      description: `${csvData.length} records have been exported to CSV.`\n    })\n  }\n\n  const filterTransactions = (type) => {\n    // First filter by tab category\n    let filtered = transactions.filter((transaction) => {\n      // Skip read notifications if setting is enabled\n      if (!showReadNotifications && readNotifications.includes(transaction.id)) {\n        return false\n      }\n      \n      // Apply type filter from selected checkboxes\n      const typeKey = Object.keys(NotificationType)[transaction.notificationType]\n      if (!selectedTypes.includes(typeKey)) {\n        return false\n      }\n\n      // Apply search filter\n      if (searchQuery) {\n        const searchLower = searchQuery.toLowerCase()\n        const matchesSearch = \n          (transaction.data && transaction.data.toLowerCase().includes(searchLower)) ||\n          String(transaction.campaignId).includes(searchLower) ||\n          transaction.userAddress.toLowerCase().includes(searchLower)\n        \n        if (!matchesSearch) return false\n      }\n\n      switch (type) {\n        case \"campaigns\":\n          return [\n            NotificationType.CAMPAIGN_CREATED,\n            NotificationType.CAMPAIGN_STARTED,\n            NotificationType.CAMPAIGN_ENDED,\n          ].includes(transaction.notificationType)\n        case \"votes\":\n          return [NotificationType.VOTE_CAST, NotificationType.VOTE_RECEIVED].includes(transaction.notificationType)\n        case \"registrations\":\n          return [NotificationType.USER_REGISTERED, NotificationType.CANDIDATE_REGISTERED].includes(\n            transaction.notificationType,\n          )\n        default:\n          return true\n      }\n    })\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      if (sortOrder === \"desc\") {\n        return b.timestamp - a.timestamp\n      } else {\n        return a.timestamp - b.timestamp\n      }\n    })\n\n    return filtered\n  }\n\n  const getActiveFiltersCount = () => {\n    let count = 0\n    if (searchQuery) count++\n    if (selectedTypes.length < 7) count++\n    if (sortOrder === \"asc\") count++\n    if (!showReadNotifications) count++\n    return count\n  }\n\n  const groupTransactionsByDate = (transactions) => {\n    if (!groupByDate) return { ungrouped: transactions }\n    \n    const groups = {}\n    \n    transactions.forEach(transaction => {\n      const date = new Date(transaction.timestamp).toLocaleDateString()\n      if (!groups[date]) {\n        groups[date] = []\n      }\n      groups[date].push(transaction)\n    })\n    \n    return groups\n  }\n  \n  const groupTransactionsByCampaign = (transactions) => {\n    if (!groupByCampaign) return { ungrouped: transactions }\n    \n    const groups = {}\n    \n    transactions.forEach(transaction => {\n      const campaignId = transaction.campaignId\n      const key = `Campaign #${campaignId}`\n      if (!groups[key]) {\n        groups[key] = []\n      }\n      groups[key].push(transaction)\n    })\n    \n    return groups\n  }\n\n  const renderGroupedTransactions = (filteredTransactions) => {\n    if (filteredTransactions.length === 0) {\n      return null\n    }\n    \n    // First group by campaign if enabled\n    let initialGroups = { ungrouped: filteredTransactions }\n    if (groupByCampaign) {\n      initialGroups = groupTransactionsByCampaign(filteredTransactions)\n    }\n    \n    // For each campaign group (or just the ungrouped list), apply date grouping if enabled\n    return Object.entries(initialGroups).map(([campaignGroup, campaignTransactions]) => {\n      // Skip rendering the group name for ungrouped transactions\n      const showCampaignHeader = campaignGroup !== 'ungrouped'\n      \n      // Apply date grouping if enabled\n      const dateGroups = groupByDate \n        ? groupTransactionsByDate(campaignTransactions)\n        : { ungrouped: campaignTransactions }\n      \n      return (\n        <div key={campaignGroup} className=\"space-y-6\">\n          {showCampaignHeader && (\n            <ActivityGroupHeader title={campaignGroup} count={campaignTransactions.length} />\n          )}\n          \n          {Object.entries(dateGroups).map(([dateGroup, dateTransactions]) => {\n            const showDateHeader = dateGroup !== 'ungrouped'\n            \n            return (\n              <div key={`${campaignGroup}-${dateGroup}`} className=\"space-y-4\">\n                {showDateHeader && (\n                  <ActivityGroupHeader \n                    title={dateGroup} \n                    count={dateTransactions.length} \n                    isSecondary={showCampaignHeader}\n                  />\n                )}\n                \n                {dateTransactions.map((transaction) => (\n                  <NotificationItem \n                    key={transaction.id} \n                    notification={transaction} \n                    isRead={readNotifications.includes(transaction.id)}\n                    onMarkAsRead={() => markAsRead(transaction.id)}\n                  />\n                ))}\n              </div>\n            )\n          })}\n        </div>\n      )\n    })\n  }\n\n  if (!isConnected) {\n    return (\n      <div className=\"container max-w-5xl py-10\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CalendarClock className=\"h-5 w-5\" />\n              Activity Log\n            </CardTitle>\n            <CardDescription>Connect your wallet to view activity and transactions</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex flex-col items-center justify-center py-10\">\n            <Bell className=\"h-16 w-16 text-muted-foreground/30 mb-4\" />\n            <p className=\"text-muted-foreground text-center\">\n              Connect your wallet to view transactions and activity\n            </p>\n            <Button className=\"mt-6\" onClick={connectWallet}>Connect Wallet</Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container max-w-5xl py-10\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CalendarClock className=\"h-5 w-5\" />\n              Activity Log\n              {unreadCount > 0 && (\n                <Badge className=\"ml-2 bg-primary text-primary-foreground\">{unreadCount} new</Badge>\n              )}\n            </CardTitle>\n            <CardDescription>View all transactions and activity in the application</CardDescription>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => setViewMode(viewMode === \"all\" ? \"myActivity\" : \"all\")}\n              className={viewMode === \"myActivity\" ? \"bg-muted/50\" : \"\"}\n            >\n              {viewMode === \"all\" ? (\n                <>\n                  <User className=\"h-4 w-4 mr-2\" />\n                  My Activity\n                </>\n              ) : (\n                <>\n                  <Bell className=\"h-4 w-4 mr-2\" />\n                  All Activity\n                </>\n              )}\n            </Button>\n            \n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\">\n                  <Settings className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuItem onClick={markAllAsRead}>\n                  <BookmarkCheck className=\"h-4 w-4 mr-2\" />\n                  Mark all as read\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={handleExportData}>\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export to CSV\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <Sheet>\n                  <SheetTrigger asChild>\n                    <DropdownMenuItem onSelect={(e) => e.preventDefault()}>\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Notification settings\n                    </DropdownMenuItem>\n                  </SheetTrigger>\n                  <SheetContent>\n                    <SheetHeader>\n                      <SheetTitle>Notification Settings</SheetTitle>\n                      <SheetDescription>\n                        Configure how you want to view your activity feed\n                      </SheetDescription>\n                    </SheetHeader>\n                    <div className=\"py-6 space-y-6\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"space-y-0.5\">\n                          <Label htmlFor=\"group-by-date\">Group by date</Label>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Group notifications by the date they occurred\n                          </p>\n                        </div>\n                        <Switch \n                          id=\"group-by-date\" \n                          checked={groupByDate}\n                          onCheckedChange={setGroupByDate}\n                        />\n                      </div>\n                      \n                      <Separator />\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"space-y-0.5\">\n                          <Label htmlFor=\"group-by-campaign\">Group by campaign</Label>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Group notifications by their associated campaign\n                          </p>\n                        </div>\n                        <Switch \n                          id=\"group-by-campaign\" \n                          checked={groupByCampaign}\n                          onCheckedChange={setGroupByCampaign}\n                        />\n                      </div>\n                      \n                      <Separator />\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"space-y-0.5\">\n                          <Label htmlFor=\"show-read\">Show read notifications</Label>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Display notifications you've already read\n                          </p>\n                        </div>\n                        <Switch \n                          id=\"show-read\" \n                          checked={showReadNotifications}\n                          onCheckedChange={setShowReadNotifications}\n                        />\n                      </div>\n                      \n                      <Separator />\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"space-y-0.5\">\n                          <Label>Real-time updates</Label>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Receive notifications as they happen\n                          </p>\n                        </div>\n                        <Badge variant={isWebSocketConnected ? \"default\" : \"outline\"}>\n                          {isWebSocketConnected ? \"Connected\" : \"Disconnected\"}\n                        </Badge>\n                      </div>\n                    </div>\n                  </SheetContent>\n                </Sheet>\n              </DropdownMenuContent>\n            </DropdownMenu>\n            \n            <Button variant=\"outline\" size=\"icon\" onClick={handleRefresh} disabled={loading || refreshing}>\n              <RefreshCw className={`h-4 w-4 ${(loading || refreshing) ? \"animate-spin\" : \"\"}`} />\n              <span className=\"sr-only\">Refresh</span>\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by campaign ID, address, or content...\"\n                className=\"pl-9\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n            </div>\n            <div className=\"flex gap-2\">\n              <Button \n                variant=\"outline\" \n                size=\"icon\"\n                onClick={handleSortOrderChange} \n                className={sortOrder === \"asc\" ? \"bg-muted/50\" : \"\"}\n              >\n                {sortOrder === \"desc\" ? (\n                  <ChevronDown className=\"h-4 w-4\" />\n                ) : (\n                  <ChevronUp className=\"h-4 w-4\" />\n                )}\n                <span className=\"sr-only\">Sort Order</span>\n              </Button>\n              \n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"outline\" size=\"icon\" className={getActiveFiltersCount() > 0 ? \"bg-muted/50\" : \"\"}>\n                    <Filter className=\"h-4 w-4\" />\n                    {getActiveFiltersCount() > 0 && (\n                      <span className=\"absolute -top-1 -right-1 bg-primary text-primary-foreground rounded-full text-xs w-4 h-4 flex items-center justify-center\">\n                        {getActiveFiltersCount()}\n                      </span>\n                    )}\n                    <span className=\"sr-only\">Filter</span>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\" className=\"w-56\">\n                  <div className=\"px-3 py-2 text-sm font-medium\">Filter Activity Types</div>\n                  {Object.entries(NotificationType).map(([key, value]) => (\n                    <DropdownMenuCheckboxItem\n                      key={key}\n                      checked={selectedTypes.includes(key)}\n                      onCheckedChange={() => handleTypeToggle(key)}\n                    >\n                      {key.split('_').map(word => word.charAt(0) + word.slice(1).toLowerCase()).join(' ')}\n                    </DropdownMenuCheckboxItem>\n                  ))}\n                  <DropdownMenuSeparator />\n                  <DropdownMenuCheckboxItem\n                    checked={showReadNotifications}\n                    onCheckedChange={setShowReadNotifications}\n                  >\n                    Show read notifications\n                  </DropdownMenuCheckboxItem>\n                  <DropdownMenuSeparator />\n                  <div className=\"px-3 py-2\">\n                    <Button variant=\"ghost\" size=\"sm\" className=\"w-full\" onClick={resetFilters}>\n                      Reset Filters\n                    </Button>\n                  </div>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </div>\n\n          <div className=\"mb-6\">\n            <Tabs defaultValue=\"all\" value={activeTab} onValueChange={setActiveTab}>\n              <TabsList className=\"w-full sm:w-auto\">\n                <TabsTrigger value=\"all\" className=\"flex-1 sm:flex-initial\">All</TabsTrigger>\n                <TabsTrigger value=\"campaigns\" className=\"flex-1 sm:flex-initial\">Campaigns</TabsTrigger>\n                <TabsTrigger value=\"votes\" className=\"flex-1 sm:flex-initial\">Votes</TabsTrigger>\n                <TabsTrigger value=\"registrations\" className=\"flex-1 sm:flex-initial\">Registrations</TabsTrigger>\n              </TabsList>\n            </Tabs>\n          </div>\n\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2 flex-wrap\">\n              <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                <Clock className=\"h-3 w-3\" />\n                <span>{sortOrder === \"desc\" ? \"Newest first\" : \"Oldest first\"}</span>\n              </Badge>\n              {viewMode === \"myActivity\" && (\n                <Badge variant=\"outline\" className=\"flex items-center gap-1 bg-primary/10\">\n                  <User className=\"h-3 w-3\" />\n                  <span>My activity only</span>\n                </Badge>\n              )}\n              {!showReadNotifications && (\n                <Badge variant=\"outline\" className=\"flex items-center gap-1 bg-blue-50 text-blue-600 border-blue-200\">\n                  <Bookmark className=\"h-3 w-3\" />\n                  <span>Unread only</span>\n                </Badge>\n              )}\n              {getActiveFiltersCount() > 0 && (\n                <Badge variant=\"outline\" className=\"flex items-center gap-1 bg-muted\">\n                  <Filter className=\"h-3 w-3\" />\n                  <span>{getActiveFiltersCount()} active {getActiveFiltersCount() === 1 ? 'filter' : 'filters'}</span>\n                </Badge>\n              )}\n              {isWebSocketConnected && (\n                <Badge variant=\"outline\" className=\"flex items-center gap-1 bg-green-50 text-green-600 border-green-200\">\n                  <span className=\"h-2 w-2 rounded-full bg-green-500 mr-1\"></span>\n                  <span>Real-time</span>\n                </Badge>\n              )}\n            </div>\n            {(searchQuery || selectedTypes.length < 7 || sortOrder === \"asc\" || !showReadNotifications) && (\n              <Button variant=\"ghost\" size=\"sm\" onClick={resetFilters} className=\"text-xs h-7\">\n                Reset all filters\n              </Button>\n            )}\n          </div>\n\n          <Tabs defaultValue=\"all\" value={activeTab}>\n            <TabsContent value=\"all\" className=\"mt-0\">\n              {renderTransactionList(filterTransactions(\"all\"))}\n            </TabsContent>\n\n            <TabsContent value=\"campaigns\" className=\"mt-0\">\n              {renderTransactionList(filterTransactions(\"campaigns\"))}\n            </TabsContent>\n\n            <TabsContent value=\"votes\" className=\"mt-0\">\n              {renderTransactionList(filterTransactions(\"votes\"))}\n            </TabsContent>\n\n            <TabsContent value=\"registrations\" className=\"mt-0\">\n              {renderTransactionList(filterTransactions(\"registrations\"))}\n            </TabsContent>\n          </Tabs>\n\n          {error && (\n            <div className=\"p-4 bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-900/20 rounded-lg mt-4 flex flex-col items-center text-center\">\n              <AlertCircle className=\"h-8 w-8 text-red-500 mb-2\" />\n              <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n              <Button variant=\"outline\" onClick={handleRefresh} className=\"mt-3\">\n                Try Again\n              </Button>\n            </div>\n          )}\n        </CardContent>\n        \n        {hasMore && !loading && transactions.length > 0 && (\n          <CardFooter className=\"flex justify-center border-t pt-4\">\n            <Button variant=\"outline\" onClick={handleLoadMore} disabled={loading} className=\"w-full sm:w-auto\">\n              {loading ? \"Loading...\" : \"Load More Activities\"}\n            </Button>\n          </CardFooter>\n        )}\n        \n        {loading && !refreshing && (\n          <CardFooter className=\"border-t pt-4\">\n            <div className=\"space-y-4 w-full\">\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"flex items-start gap-4\">\n                  <Skeleton className=\"h-10 w-10 rounded-full flex-shrink-0\" />\n                  <div className=\"space-y-2 flex-1\">\n                    <Skeleton className=\"h-4 w-full\" />\n                    <Skeleton className=\"h-4 w-3/4\" />\n                    <div className=\"flex justify-between mt-2\">\n                      <Skeleton className=\"h-8 w-24\" />\n                      <Skeleton className=\"h-8 w-16\" />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardFooter>\n        )}\n      </Card>\n    </div>\n  )\n\n  function renderTransactionList(filteredTransactions) {\n    if (loading && transactions.length === 0) {\n      return null // Loading state is handled separately\n    }\n  \n    if (filteredTransactions.length === 0) {\n      if (searchQuery || selectedTypes.length < 7 || !showReadNotifications) {\n        return (\n          <div className=\"flex flex-col items-center justify-center py-10 text-center rounded-lg border border-dashed\">\n            <AlertTriangle className=\"h-10 w-10 text-muted-foreground/50 mb-2\" />\n            <h3 className=\"text-lg font-medium\">No results found</h3>\n            <p className=\"text-muted-foreground text-sm mt-1\">Try adjusting your search or filters</p>\n            <Button variant=\"outline\" className=\"mt-4\" onClick={resetFilters}>\n              Reset Filters\n            </Button>\n          </div>\n        )\n      }\n      return <EmptyState type={activeTab} />\n    }\n  \n    return renderGroupedTransactions(filteredTransactions)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}