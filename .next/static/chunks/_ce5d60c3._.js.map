{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardAction({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}) {\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props} />)\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS;AAeT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;MALS;AAOT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({\n  className,\n  type,\n  ...props\n}) {\n  return (\n    (<input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({\n  className,\n  ...props\n}) {\n  return (\n    (<textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    (<Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props} />)\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAdS","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}) {\n  return (\n    (<SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACG,6LAAC,wKAAA,CAAA,OAAuB;QACvB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/progress.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}) {\n  return (\n    (<ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}>\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }} />\n    </ProgressPrimitive.Root>)\n  );\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACJ;IACC,qBACG,6LAAC,uKAAA,CAAA,OAAsB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBACT,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAGlE;KAnBS","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useContract } from \"@/context/contract-context\"\nimport { useState, useEffect, useCallback } from \"react\"\nimport { useParams, useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\nimport {\n  ChevronLeft,\n  Clock,\n  Award,\n  FileText,\n  Users,\n  CheckCircle,\n  AlertCircle,\n  RefreshCw,\n  Vote,\n  User,\n  Lock,\n} from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { toast } from \"sonner\"\n\n// --- Helper Functions ---\n\n// Map enum numbers to strings (adjust if your enums change order/value)\nconst VotingType = [\"CandidateBased\", \"ProposalBased\"]\nconst VotingRestriction = [\"OpenToAll\", \"Limited\", \"RequiredRegistration\"]\nconst ResultType = [\"RankBased\", \"OneWinner\"]\nconst CampaignStatus = [\"Created\", \"Active\", \"Ended\"]\n\nconst formatTimestamp = (timestamp) => {\n  if (!timestamp || timestamp === 0n) return \"N/A\"\n  try {\n    // Convert BigInt to Number for Date constructor (safe for typical timestamps)\n    return new Date(Number(timestamp) * 1000).toLocaleString()\n  } catch (e) {\n    console.error(\"Error formatting timestamp:\", e)\n    return \"Invalid Date\"\n  }\n}\n\n// Simple IPFS Gateway resolver (replace with your preferred gateway)\nconst resolveIpfsUrl = (hash) => {\n  if (!hash) return null\n  // Example using Pinata public gateway - use your own or a dedicated one\n  return `https://gateway.pinata.cloud/ipfs/${hash}`\n}\n\n// Format address to shorter version\nconst formatAddress = (address) => {\n  if (!address) return \"\"\n  return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`\n}\n\n// Calculate time remaining in readable format\nconst getTimeRemaining = (targetTime) => {\n  if (!targetTime) return { days: 0, hours: 0, minutes: 0, seconds: 0 }\n\n  const now = BigInt(Math.floor(Date.now() / 1000))\n  if (now >= targetTime) return { days: 0, hours: 0, minutes: 0, seconds: 0 }\n\n  const diff = Number(targetTime - now)\n  const days = Math.floor(diff / (60 * 60 * 24))\n  const hours = Math.floor((diff % (60 * 60 * 24)) / (60 * 60))\n  const minutes = Math.floor((diff % (60 * 60)) / 60)\n  const seconds = Math.floor(diff % 60)\n\n  return { days, hours, minutes, seconds }\n}\n\n// --- Component ---\n\nconst CampaignDetailPage = () => {\n  const router = useRouter()\n  const { contract, address, signer, isConnected } = useContract()\n  const params = useParams()\n  const campaignIdParam = params?.id\n\n  const [campaignId, setCampaignId] = useState(null)\n  const [campaignInfo, setCampaignInfo] = useState(null)\n  const [proposals, setProposals] = useState([])\n  const [candidates, setCandidates] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [userHasVoted, setUserHasVoted] = useState(false)\n  const [userIsRegistered, setUserIsRegistered] = useState(false)\n  const [actionLoading, setActionLoading] = useState(false)\n  const [actionError, setActionError] = useState(\"\")\n  const [timeRemaining, setTimeRemaining] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 })\n  const [countdownTarget, setCountdownTarget] = useState(null)\n\n  // State for input fields\n  const [passKey, setPassKey] = useState(\"\")\n  const [candidateName, setCandidateName] = useState(\"\")\n  const [candidateStatement, setCandidateStatement] = useState(\"\")\n  const [candidateImageHash, setCandidateImageHash] = useState(\"\")\n\n  // --- Data Fetching ---\n  const fetchCampaignData = useCallback(async () => {\n    if (!contract || !campaignId) {\n      setLoading(false)\n      if (campaignIdParam && !campaignId) setError(\"Invalid Campaign ID format.\")\n      return\n    }\n    setLoading(true)\n    setError(null)\n    setActionError(\"\")\n    console.log(`Fetching data for campaign ID: ${campaignId}`)\n\n    try {\n      // Fetch all data concurrently for efficiency\n      const [basicInfoRes, statusInfoRes, statsRes] = await Promise.all([\n        contract.getCampaignBasicInfo(campaignId),\n        contract.getCampaignStatusInfo(campaignId),\n        contract.getCampaignStats(campaignId),\n      ])\n\n      // Combine fetched data into a single state object\n      const combinedInfo = {\n        votingType: Number(basicInfoRes[0]),\n        restriction: Number(basicInfoRes[1]),\n        resultType: Number(basicInfoRes[2]),\n        creator: basicInfoRes[3],\n        description: basicInfoRes[4],\n        status: Number(statusInfoRes[0]),\n        startTime: statusInfoRes[1],\n        endTime: statusInfoRes[2],\n        maxVoters: statusInfoRes[3],\n        totalVotes: statsRes[0],\n        registeredVoterCount: statsRes[1],\n        itemCount: statsRes[2],\n      }\n      setCampaignInfo(combinedInfo)\n\n      // Set countdown target based on campaign phase\n      const now = BigInt(Math.floor(Date.now() / 1000))\n      if (now < combinedInfo.startTime) {\n        setCountdownTarget(combinedInfo.startTime)\n      } else if (now < combinedInfo.endTime) {\n        setCountdownTarget(combinedInfo.endTime)\n      }\n\n      console.log(\"Fetched Campaign Info:\", combinedInfo)\n\n      // Fetch proposals or candidates based on type\n      if (combinedInfo.votingType === 1 /* ProposalBased */) {\n        const fetchedProposals = []\n        for (let i = 0n; i < combinedInfo.itemCount; i++) {\n          try {\n            const proposal = await contract.getProposalInfo(campaignId, i)\n            fetchedProposals.push({ id: i, content: proposal[0], voteCount: proposal[1] })\n          } catch (proposalErr) {\n            console.error(`Error fetching proposal ${i}:`, proposalErr)\n          }\n        }\n        setProposals(fetchedProposals)\n        setCandidates([])\n        console.log(\"Fetched Proposals:\", fetchedProposals)\n      } else if (combinedInfo.votingType === 0 /* CandidateBased */) {\n        const fetchedCandidates = []\n        for (let i = 0n; i < combinedInfo.itemCount; i++) {\n          try {\n            const candidate = await contract.getCandidateInfo(campaignId, i)\n            fetchedCandidates.push({\n              id: i,\n              address: candidate[0],\n              name: candidate[1],\n              statement: candidate[2],\n              imageHash: candidate[3],\n              voteCount: candidate[4],\n            })\n          } catch (candidateErr) {\n            console.error(`Error fetching candidate ${i}:`, candidateErr)\n          }\n        }\n        setCandidates(fetchedCandidates)\n        setProposals([])\n        console.log(\"Fetched Candidates:\", fetchedCandidates)\n      }\n\n      // Fetch user-specific status if connected\n      if (address) {\n        const [voted, registered] = await Promise.all([\n          contract.hasVoted(campaignId, address),\n          contract.isRegisteredVoter(campaignId, address),\n        ])\n        setUserHasVoted(voted)\n        setUserIsRegistered(registered)\n        console.log(`User Status: Voted=${voted}, Registered=${registered}`)\n      } else {\n        setUserHasVoted(false)\n        setUserIsRegistered(false)\n      }\n    } catch (err) {\n      console.error(\"Error fetching campaign data:\", err)\n      // Attempt to decode Solidity revert reason\n      let reason = \"Failed to load campaign details.\"\n      if (err.reason) {\n        reason = err.reason\n      } else if (err.data?.message) {\n        reason = err.data.message\n      } else if (err.message) {\n        reason = err.message\n      }\n      setError(reason.includes(\"Invalid campaign\") ? \"Campaign not found or ID is invalid.\" : reason)\n      setCampaignInfo(null)\n    } finally {\n      setLoading(false)\n    }\n  }, [contract, campaignId, address, campaignIdParam])\n\n  // --- Effect to parse ID and trigger fetch ---\n  useEffect(() => {\n    if (campaignIdParam) {\n      try {\n        const idBigInt = BigInt(campaignIdParam)\n        setCampaignId(idBigInt)\n      } catch (e) {\n        setError(\"Invalid Campaign ID in URL.\")\n        setLoading(false)\n        setCampaignId(null)\n      }\n    } else {\n      setLoading(false)\n    }\n  }, [campaignIdParam])\n\n  useEffect(() => {\n    // Fetch data when contract is ready and campaignId is set\n    if (contract && campaignId) {\n      fetchCampaignData()\n    }\n  }, [contract, campaignId, fetchCampaignData])\n\n  // Countdown timer effect\n  useEffect(() => {\n    if (!countdownTarget) return\n\n    const updateCountdown = () => {\n      const remaining = getTimeRemaining(countdownTarget)\n      setTimeRemaining(remaining)\n\n      // If countdown finished, refresh data\n      const now = BigInt(Math.floor(Date.now() / 1000))\n      if (now >= countdownTarget) {\n        fetchCampaignData()\n      }\n    }\n\n    updateCountdown()\n    const interval = setInterval(updateCountdown, 1000)\n    return () => clearInterval(interval)\n  }, [countdownTarget, fetchCampaignData])\n\n  // --- Action Handlers ---\n\n  const handleRegisterToVote = async () => {\n    if (!isConnected) {\n      toast.error(\"Wallet not connected\", {\n        description: \"Please connect your wallet to register\",\n      })\n      return\n    }\n\n    if (!contract || !signer || !campaignId || !address) {\n      setActionError(\"Wallet not connected or contract not loaded.\")\n      return\n    }\n    if (campaignInfo?.restriction === 2 /* RequiredRegistration */ && !passKey) {\n      setActionError(\"Passkey is required for this campaign.\")\n      return\n    }\n\n    setActionLoading(true)\n    setActionError(\"\")\n    console.log(`Attempting to register to vote for campaign ${campaignId}`)\n    try {\n      const contractWithSigner = contract.connect(signer)\n      const tx = await contractWithSigner.registerToVote(campaignId, passKey)\n\n      toast.success(\"Registration submitted\", {\n        description: \"Your registration transaction has been sent to the blockchain\",\n      })\n\n      console.log(\"Registration transaction sent:\", tx.hash)\n      await tx.wait()\n      console.log(\"Registration successful!\")\n\n      toast.success(\"Registration successful\", {\n        description: \"You are now registered to vote in this campaign\",\n      })\n\n      // Re-fetch data to update UI\n      await fetchCampaignData()\n      setPassKey(\"\")\n    } catch (err) {\n      console.error(\"Registration error:\", err)\n      let reason = \"Registration failed.\"\n      if (err.reason) {\n        reason = err.reason\n      } else if (err.data?.message) {\n        reason = err.data.message\n      } else if (err.message) {\n        reason = err.message\n      }\n      setActionError(reason)\n\n      toast.error(\"Registration failed\", {\n        description: reason,\n      })\n    } finally {\n      setActionLoading(false)\n    }\n  }\n\n  const handleRegisterAsCandidate = async () => {\n    if (!isConnected) {\n      toast.error(\"Wallet not connected\", {\n        description: \"Please connect your wallet to register as a candidate\",\n      })\n      return\n    }\n\n    if (!contract || !signer || !campaignId || !address) {\n      setActionError(\"Wallet not connected or contract not loaded.\")\n      return\n    }\n    if (!candidateName || !candidateStatement) {\n      setActionError(\"Candidate name and statement are required.\")\n      return\n    }\n    if (campaignInfo?.restriction === 2 /* RequiredRegistration */ && !passKey) {\n      setActionError(\"Passkey is required for this campaign's registration.\")\n      return\n    }\n\n    setActionLoading(true)\n    setActionError(\"\")\n    console.log(`Attempting to register as candidate for campaign ${campaignId}`)\n    try {\n      const contractWithSigner = contract.connect(signer)\n      const tx = await contractWithSigner.registerAsCandidate(\n        campaignId,\n        candidateName,\n        candidateStatement,\n        candidateImageHash,\n        passKey,\n      )\n\n      toast.success(\"Candidate registration submitted\", {\n        description: \"Your registration transaction has been sent to the blockchain\",\n      })\n\n      console.log(\"Candidate registration transaction sent:\", tx.hash)\n      await tx.wait()\n      console.log(\"Candidate registration successful!\")\n\n      toast.success(\"Candidate registration successful\", {\n        description: \"You are now registered as a candidate in this campaign\",\n      })\n\n      await fetchCampaignData()\n      // Clear form fields\n      setCandidateName(\"\")\n      setCandidateStatement(\"\")\n      setCandidateImageHash(\"\")\n      setPassKey(\"\")\n    } catch (err) {\n      console.error(\"Candidate registration error:\", err)\n      let reason = \"Candidate registration failed.\"\n      if (err.reason) {\n        reason = err.reason\n      } else if (err.data?.message) {\n        reason = err.data.message\n      } else if (err.message) {\n        reason = err.message\n      }\n      setActionError(reason)\n\n      toast.error(\"Candidate registration failed\", {\n        description: reason,\n      })\n    } finally {\n      setActionLoading(false)\n    }\n  }\n\n  const handleVote = async (targetId) => {\n    if (!isConnected) {\n      toast.error(\"Wallet not connected\", {\n        description: \"Please connect your wallet to vote\",\n      })\n      return\n    }\n\n    if (!contract || !signer || !campaignId || !address || campaignInfo === null) {\n      setActionError(\"Wallet not connected, contract not loaded, or campaign data missing.\")\n      return\n    }\n    // Ensure targetId is BigInt for contract call\n    const targetIdBigInt = BigInt(targetId)\n\n    setActionLoading(true)\n    setActionError(\"\")\n    console.log(\n      `Attempting to vote for ${campaignInfo.votingType === 1 ? \"proposal\" : \"candidate\"} ${targetIdBigInt} in campaign ${campaignId}`,\n    )\n\n    try {\n      const contractWithSigner = contract.connect(signer)\n      let tx\n      if (campaignInfo.votingType === 1 /* ProposalBased */) {\n        tx = await contractWithSigner.voteForProposal(campaignId, targetIdBigInt)\n      } else {\n        // CandidateBased\n        tx = await contractWithSigner.voteForCandidate(campaignId, targetIdBigInt)\n      }\n\n      toast.success(\"Vote submitted\", {\n        description: \"Your vote has been sent to the blockchain\",\n      })\n\n      console.log(\"Vote transaction sent:\", tx.hash)\n      await tx.wait()\n      console.log(\"Vote successful!\")\n\n      toast.success(\"Vote successful\", {\n        description: \"Your vote has been recorded\",\n      })\n\n      await fetchCampaignData()\n    } catch (err) {\n      console.error(\"Voting error:\", err)\n      let reason = \"Voting failed.\"\n      if (err.reason) {\n        reason = err.reason\n      } else if (err.data?.message) {\n        reason = err.data.message\n      } else if (err.message) {\n        reason = err.message\n      }\n      setActionError(reason)\n\n      toast.error(\"Voting failed\", {\n        description: reason,\n      })\n    } finally {\n      setActionLoading(false)\n    }\n  }\n\n  const handleUpdateStatus = async () => {\n    if (!isConnected) {\n      toast.error(\"Wallet not connected\", {\n        description: \"Please connect your wallet to update status\",\n      })\n      return\n    }\n\n    if (!contract || !signer || !campaignId) {\n      setActionError(\"Cannot update status: Wallet not connected or contract not loaded.\")\n      return\n    }\n    setActionLoading(true)\n    setActionError(\"\")\n    console.log(`Attempting to update status for campaign ${campaignId}`)\n    try {\n      const contractWithSigner = contract.connect(signer)\n      const tx = await contractWithSigner.updateCampaignStatus(campaignId)\n\n      toast.success(\"Status update submitted\", {\n        description: \"Status update transaction has been sent to the blockchain\",\n      })\n\n      console.log(\"Update status transaction sent:\", tx.hash)\n      await tx.wait()\n      console.log(\"Status update checked/executed.\")\n\n      toast.success(\"Status updated\", {\n        description: \"Campaign status has been updated\",\n      })\n\n      await fetchCampaignData()\n    } catch (err) {\n      console.error(\"Status update error:\", err)\n      setActionError(\"Failed to update status. \" + (err.reason || err.message))\n\n      toast.error(\"Status update failed\", {\n        description: err.reason || err.message,\n      })\n    } finally {\n      setActionLoading(false)\n    }\n  }\n\n  // --- Render Logic ---\n\n  if (loading) {\n    return (\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n            <p className=\"mt-4 text-muted-foreground\">Loading campaign details...</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-xl text-red-600\">Error</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>{error}</p>\n            <Button className=\"mt-4\" asChild>\n              <Link href=\"/campaigns\">Back to Campaigns</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (!campaignInfo) {\n    return (\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Campaign Not Found</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>The campaign you're looking for doesn't exist or couldn't be loaded.</p>\n            <Button className=\"mt-4\" asChild>\n              <Link href=\"/campaigns\">Back to Campaigns</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  // Derived state for easier conditional rendering\n  const now = BigInt(Math.floor(Date.now() / 1000))\n  const isBeforeStart = now < campaignInfo.startTime\n  const isDuringVoting = now >= campaignInfo.startTime && now <= campaignInfo.endTime\n  const isAfterEnd = now > campaignInfo.endTime\n  const needsRegistration =\n    campaignInfo.restriction === 1 /* Limited */ || campaignInfo.restriction === 2 /* RequiredRegistration */\n  const canRegister = isBeforeStart && campaignInfo.status === 0 /* Created */\n  const canVote = isDuringVoting && campaignInfo.status === 1 /* Active */\n  const needsStatusUpdate =\n    (isDuringVoting && campaignInfo.status === 0) /* Created */ ||\n    (isAfterEnd && campaignInfo.status === 1) /* Active */\n\n  // Calculate total votes for percentage calculations\n  const totalVotes = campaignInfo.totalVotes > 0 ? Number(campaignInfo.totalVotes) : 0\n\n  return (\n    <div className=\"container max-w-4xl mx-auto py-8 space-y-6\">\n      <div className=\"mb-6\">\n        <Link\n          href=\"/campaigns\"\n          className=\"flex items-center text-muted-foreground hover:text-foreground transition-colors mb-4\"\n        >\n          <ChevronLeft className=\"h-4 w-4 mr-1\" />\n          Back to campaigns\n        </Link>\n      </div>\n\n      {/* Campaign Header */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col md:flex-row md:justify-between md:items-start gap-2\">\n            <div>\n              <CardTitle className=\"text-2xl\">{campaignInfo.description}</CardTitle>\n              <CardDescription className=\"mt-2\">\n                Created by: <span className=\"font-mono\">{formatAddress(campaignInfo.creator)}</span>\n              </CardDescription>\n            </div>\n            <Badge\n              className={`${\n                campaignInfo.status === 0\n                  ? \"bg-blue-500 hover:bg-blue-600\"\n                  : campaignInfo.status === 1\n                    ? \"bg-green-500 hover:bg-green-600\"\n                    : \"bg-red-500 hover:bg-red-600\"\n              }`}\n            >\n              {CampaignStatus[campaignInfo.status]}\n            </Badge>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <FileText className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Voting Type</p>\n                <p className=\"font-medium\">{VotingType[campaignInfo.votingType]}</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <Award className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Result Type</p>\n                <p className=\"font-medium\">{ResultType[campaignInfo.resultType]}</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Time Frame</p>\n                <p className=\"font-medium\">\n                  {formatTimestamp(campaignInfo.startTime)} - {formatTimestamp(campaignInfo.endTime)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Access Restriction</p>\n                <p className=\"font-medium\">\n                  {VotingRestriction[campaignInfo.restriction]}\n                  {campaignInfo.restriction === 1 &&\n                    campaignInfo.maxVoters > 0n &&\n                    ` (Max: ${campaignInfo.maxVoters.toString()})`}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <Separator />\n\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center gap-2\">\n                <Vote className=\"h-5 w-5 text-muted-foreground\" />\n                <span className=\"font-medium\">Voting Progress</span>\n              </div>\n              <span className=\"text-sm text-muted-foreground\">\n                {campaignInfo.totalVotes.toString()} votes cast\n                {needsRegistration && ` / ${campaignInfo.registeredVoterCount.toString()} registered`}\n              </span>\n            </div>\n\n            <Progress\n              value={\n                campaignInfo.registeredVoterCount > 0n\n                  ? (Number(campaignInfo.totalVotes) / Number(campaignInfo.registeredVoterCount)) * 100\n                  : 0\n              }\n              className=\"h-2\"\n            />\n          </div>\n\n          {/* Countdown Timer */}\n          {(isBeforeStart || isDuringVoting) && (\n            <div className=\"bg-muted rounded-lg p-4 text-center\">\n              <p className=\"text-sm text-muted-foreground mb-2\">\n                {isBeforeStart ? \"Voting starts in:\" : \"Voting ends in:\"}\n              </p>\n              <div className=\"grid grid-cols-4 gap-2\">\n                <div className=\"bg-background rounded p-2\">\n                  <div className=\"text-2xl font-bold\">{timeRemaining.days}</div>\n                  <div className=\"text-xs text-muted-foreground\">Days</div>\n                </div>\n                <div className=\"bg-background rounded p-2\">\n                  <div className=\"text-2xl font-bold\">{timeRemaining.hours}</div>\n                  <div className=\"text-xs text-muted-foreground\">Hours</div>\n                </div>\n                <div className=\"bg-background rounded p-2\">\n                  <div className=\"text-2xl font-bold\">{timeRemaining.minutes}</div>\n                  <div className=\"text-xs text-muted-foreground\">Minutes</div>\n                </div>\n                <div className=\"bg-background rounded p-2\">\n                  <div className=\"text-2xl font-bold\">{timeRemaining.seconds}</div>\n                  <div className=\"text-xs text-muted-foreground\">Seconds</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {needsStatusUpdate && (\n            <div className=\"flex justify-center\">\n              <Button onClick={handleUpdateStatus} disabled={actionLoading} className=\"flex items-center gap-2\">\n                <RefreshCw className=\"h-4 w-4\" />\n                {actionLoading ? \"Updating Status...\" : \"Update Campaign Status\"}\n              </Button>\n            </div>\n          )}\n\n          {actionError && (\n            <div className=\"bg-red-50 border border-red-200 text-red-600 rounded-md p-3 text-sm\">{actionError}</div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Registration Section */}\n      {canRegister && needsRegistration && !userIsRegistered && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <User className=\"h-5 w-5\" />\n              Register for this Campaign\n            </CardTitle>\n            <CardDescription>\n              {campaignInfo.restriction === 1\n                ? `Limited to ${campaignInfo.maxVoters.toString()} voters`\n                : \"Registration required to participate\"}\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"space-y-4\">\n            {campaignInfo.restriction === 2 && (\n              <div className=\"space-y-2\">\n                <label htmlFor=\"passKeyReg\" className=\"text-sm font-medium\">\n                  Passkey\n                </label>\n                <div className=\"flex items-center\">\n                  <Lock className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n                  <Input\n                    type=\"password\"\n                    id=\"passKeyReg\"\n                    value={passKey}\n                    onChange={(e) => setPassKey(e.target.value)}\n                    placeholder=\"Enter registration passkey\"\n                  />\n                </div>\n              </div>\n            )}\n\n            <Button onClick={handleRegisterToVote} disabled={actionLoading} className=\"w-full\">\n              {actionLoading ? \"Registering...\" : \"Register to Vote\"}\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Candidate Registration Section */}\n      {canRegister && campaignInfo.votingType === 0 /* CandidateBased */ && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Award className=\"h-5 w-5\" />\n              Register as a Candidate\n            </CardTitle>\n            <CardDescription>Fill out the form to become a candidate in this campaign</CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label htmlFor=\"candidateName\" className=\"text-sm font-medium\">\n                Candidate Name <span className=\"text-red-500\">*</span>\n              </label>\n              <Input\n                id=\"candidateName\"\n                value={candidateName}\n                onChange={(e) => setCandidateName(e.target.value)}\n                placeholder=\"Your name or title\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"candidateStatement\" className=\"text-sm font-medium\">\n                Statement <span className=\"text-red-500\">*</span>\n              </label>\n              <Textarea\n                id=\"candidateStatement\"\n                value={candidateStatement}\n                onChange={(e) => setCandidateStatement(e.target.value)}\n                placeholder=\"Why should people vote for you?\"\n                rows=\"3\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"candidateImageHash\" className=\"text-sm font-medium\">\n                Image IPFS Hash (Optional)\n              </label>\n              <Input\n                id=\"candidateImageHash\"\n                value={candidateImageHash}\n                onChange={(e) => setCandidateImageHash(e.target.value)}\n                placeholder=\"Qm...\"\n              />\n              <p className=\"text-xs text-muted-foreground\">Upload your image to IPFS and paste the hash here</p>\n            </div>\n\n            {campaignInfo.restriction === 2 && !userIsRegistered && (\n              <div className=\"space-y-2\">\n                <label htmlFor=\"candidatePassKey\" className=\"text-sm font-medium\">\n                  Passkey <span className=\"text-red-500\">*</span>\n                </label>\n                <div className=\"flex items-center\">\n                  <Lock className=\"h-4 w-4 mr-2 text-muted-foreground\" />\n                  <Input\n                    type=\"password\"\n                    id=\"candidatePassKey\"\n                    value={passKey}\n                    onChange={(e) => setPassKey(e.target.value)}\n                    placeholder=\"Enter registration passkey\"\n                  />\n                </div>\n              </div>\n            )}\n\n            <Button onClick={handleRegisterAsCandidate} disabled={actionLoading} className=\"w-full\">\n              {actionLoading ? \"Registering...\" : \"Register as Candidate\"}\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Voting Section */}\n      {canVote && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Vote className=\"h-5 w-5\" />\n              Cast Your Vote\n            </CardTitle>\n            <CardDescription>\n              {campaignInfo.votingType === 1 ? \"Select a proposal to vote for\" : \"Select a candidate to vote for\"}\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"space-y-4\">\n            {!isConnected ? (\n              <div className=\"bg-yellow-50 border border-yellow-200 text-yellow-700 rounded-md p-4 text-center\">\n                <AlertCircle className=\"h-5 w-5 mx-auto mb-2\" />\n                <p>Please connect your wallet to vote</p>\n              </div>\n            ) : needsRegistration && !userIsRegistered ? (\n              <div className=\"bg-yellow-50 border border-yellow-200 text-yellow-700 rounded-md p-4 text-center\">\n                <AlertCircle className=\"h-5 w-5 mx-auto mb-2\" />\n                <p>You must be registered to vote in this campaign</p>\n              </div>\n            ) : userHasVoted ? (\n              <div className=\"bg-green-50 border border-green-200 text-green-700 rounded-md p-4 text-center\">\n                <CheckCircle className=\"h-5 w-5 mx-auto mb-2\" />\n                <p>You have already voted in this campaign</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {/* Render Proposals */}\n                {campaignInfo.votingType === 1 && proposals.length > 0 && (\n                  <div className=\"space-y-3\">\n                    {proposals.map((proposal) => (\n                      <div\n                        key={proposal.id.toString()}\n                        className=\"border rounded-lg p-4 hover:bg-muted transition-colors\"\n                      >\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"font-medium\">{proposal.content}</div>\n                          <Button onClick={() => handleVote(proposal.id)} disabled={actionLoading} size=\"sm\">\n                            {actionLoading ? \"Voting...\" : \"Vote\"}\n                          </Button>\n                        </div>\n                        <div className=\"mt-2 text-sm text-muted-foreground\">\n                          Current votes: {proposal.voteCount.toString()}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Render Candidates */}\n                {campaignInfo.votingType === 0 && candidates.length > 0 && (\n                  <div className=\"space-y-4\">\n                    {candidates.map((candidate) => (\n                      <div\n                        key={candidate.id.toString()}\n                        className=\"border rounded-lg p-4 hover:bg-muted transition-colors\"\n                      >\n                        <div className=\"flex items-start gap-4\">\n                          {candidate.imageHash && (\n                            <div className=\"flex-shrink-0\">\n                              <img\n                                src={resolveIpfsUrl(candidate.imageHash) || \"/placeholder.svg\"}\n                                alt={candidate.name}\n                                className=\"w-16 h-16 rounded-full object-cover\"\n                                onError={(e) => {\n                                  e.target.style.display = \"none\"\n                                }}\n                              />\n                            </div>\n                          )}\n                          <div className=\"flex-grow\">\n                            <div className=\"font-medium\">{candidate.name}</div>\n                            <div className=\"text-sm text-muted-foreground mt-1\">{candidate.statement}</div>\n                            <div className=\"text-xs text-muted-foreground mt-1 font-mono\">\n                              {formatAddress(candidate.address)}\n                            </div>\n                          </div>\n                          <div className=\"flex-shrink-0\">\n                            <Button\n                              onClick={() => handleVote(candidate.id)}\n                              disabled={actionLoading || (needsRegistration && candidate.address === address)}\n                              title={\n                                needsRegistration && candidate.address === address ? \"Cannot vote for yourself\" : \"\"\n                              }\n                              size=\"sm\"\n                            >\n                              {actionLoading ? \"Voting...\" : \"Vote\"}\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"mt-2 text-sm text-muted-foreground\">\n                          Current votes: {candidate.voteCount.toString()}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {proposals.length === 0 && candidates.length === 0 && (\n                  <div className=\"text-center text-muted-foreground py-8\">\n                    No proposals or candidates available to vote on yet\n                  </div>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Results Section */}\n      {(isAfterEnd || campaignInfo.status === 2) /* Ended */ && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Award className=\"h-5 w-5\" />\n              Results\n            </CardTitle>\n            <CardDescription>\n              {campaignInfo.status === 2\n                ? \"Final results of the campaign\"\n                : \"Preliminary results (campaign not officially ended yet)\"}\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"space-y-6\">\n            {/* Display Proposals Results */}\n            {campaignInfo.votingType === 1 && proposals.length > 0 && (\n              <div className=\"space-y-4\">\n                {proposals\n                  .sort((a, b) => Number(b.voteCount - a.voteCount)) // Sort by votes\n                  .map((proposal, index) => (\n                    <div key={proposal.id.toString()} className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          {index === 0 && campaignInfo.resultType === 1 && (\n                            <Badge className=\"bg-yellow-500\">Winner</Badge>\n                          )}\n                          <span className=\"font-medium\">{proposal.content}</span>\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"font-bold\">{proposal.voteCount.toString()}</span>\n                          <span className=\"text-muted-foreground text-sm ml-1\">\n                            ({totalVotes > 0 ? Math.round((Number(proposal.voteCount) / totalVotes) * 100) : 0}%)\n                          </span>\n                        </div>\n                      </div>\n                      <Progress\n                        value={totalVotes > 0 ? (Number(proposal.voteCount) / totalVotes) * 100 : 0}\n                        className=\"h-2\"\n                      />\n                    </div>\n                  ))}\n              </div>\n            )}\n\n            {/* Display Candidates Results */}\n            {campaignInfo.votingType === 0 && candidates.length > 0 && (\n              <div className=\"space-y-4\">\n                {candidates\n                  .sort((a, b) => Number(b.voteCount - a.voteCount)) // Sort by votes\n                  .map((candidate, index) => (\n                    <div key={candidate.id.toString()} className=\"space-y-2\">\n                      <div className=\"flex items-start gap-3\">\n                        {candidate.imageHash && (\n                          <img\n                            src={resolveIpfsUrl(candidate.imageHash) || \"/placeholder.svg\"}\n                            alt={candidate.name}\n                            className=\"w-12 h-12 rounded-full object-cover flex-shrink-0\"\n                            onError={(e) => {\n                              e.target.style.display = \"none\"\n                            }}\n                          />\n                        )}\n                        <div className=\"flex-grow\">\n                          <div className=\"flex items-center gap-2\">\n                            {index === 0 && campaignInfo.resultType === 1 && (\n                              <Badge className=\"bg-yellow-500\">Winner</Badge>\n                            )}\n                            <span className=\"font-medium\">{candidate.name}</span>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground\">{candidate.statement}</p>\n                        </div>\n                        <div className=\"text-right flex-shrink-0\">\n                          <span className=\"font-bold\">{candidate.voteCount.toString()}</span>\n                          <span className=\"text-muted-foreground text-sm ml-1\">\n                            ({totalVotes > 0 ? Math.round((Number(candidate.voteCount) / totalVotes) * 100) : 0}%)\n                          </span>\n                        </div>\n                      </div>\n                      <Progress\n                        value={totalVotes > 0 ? (Number(candidate.voteCount) / totalVotes) * 100 : 0}\n                        className=\"h-2\"\n                      />\n                    </div>\n                  ))}\n              </div>\n            )}\n\n            {proposals.length === 0 && candidates.length === 0 && (\n              <div className=\"text-center text-muted-foreground py-8\">No results available</div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default CampaignDetailPage\n\n"],"names":[],"mappings":"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","debugId":null}}]
}