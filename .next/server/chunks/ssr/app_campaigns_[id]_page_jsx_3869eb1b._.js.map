{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState, useCallback } from \"react\"\nimport { useParams } from \"next/navigation\"\nimport { useContract } from \"@/context/contract-context\"\nimport { DetailsStep } from \"./DetailsStep\";\nimport { ConfigurationStep } from \"./ConfigurationStep\";\nimport { TimeFrameStep } from \"./TimeFrameStep\";\nimport { ProposalsStep } from \"./ProposalsStep\";\nimport { StepNavigation } from \"./StepNavigation\";\nimport { CampaignTypeStep } from \"./CampaignTypeStep\";\n\n\nimport { getTimeRemaining } from \"@/lib/utils\"\n\nconst CampaignDetailPage = () => {\n  const { contract, address, isConnected } = useContract()\n  const params = useParams()\n  const campaignIdParam = params?.id\n\n  const [campaignId, setCampaignId] = useState(null)\n  const [campaignInfo, setCampaignInfo] = useState(null)\n  const [proposals, setProposals] = useState([])\n  const [candidates, setCandidates] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [userHasVoted, setUserHasVoted] = useState(false)\n  const [userIsRegistered, setUserIsRegistered] = useState(false)\n  const [isOwner, setIsOwner] = useState(false)\n  const [actionLoading, setActionLoading] = useState(false)\n  const [actionError, setActionError] = useState(\"\")\n  const [timeRemaining, setTimeRemaining] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 })\n  const [countdownTarget, setCountdownTarget] = useState(null)\n\n  // --- Data Fetching ---\n  const fetchCampaignData = useCallback(async () => {\n    if (!contract || !campaignId) {\n      setLoading(false)\n      if (campaignIdParam && !campaignId) setError(\"Invalid Campaign ID format.\")\n      return\n    }\n    setLoading(true)\n    setError(null)\n    setActionError(\"\")\n    console.log(`Fetching data for campaign ID: ${campaignId}`)\n\n    try {\n      // Fetch campaign basic info\n      const [votingType, restriction, resultType, creator, description] =\n        await contract.getCampaignBasicInfo(campaignId)\n\n      // Fetch campaign time info\n      const [status, startTime, endTime] = await contract.getCampaignTimeInfo(campaignId)\n\n      // Fetch campaign stats\n      const [totalVotes, itemCount, registeredVoterCount] = await contract.getCampaignStats(campaignId)\n\n      // Combine fetched data into a single state object\n      const combinedInfo = {\n        votingType: Number(votingType),\n        restriction: Number(restriction),\n        resultType: Number(resultType),\n        creator: creator,\n        description: description,\n        status: Number(status),\n        startTime: Number(startTime),\n        endTime: Number(endTime),\n        totalVotes: Number(totalVotes),\n        itemCount: Number(itemCount),\n        registeredVoterCount: Number(registeredVoterCount),\n      }\n      setCampaignInfo(combinedInfo)\n\n      // Check if current user is the owner\n      setIsOwner(address && address.toLowerCase() === creator.toLowerCase())\n\n      // Set countdown target based on campaign phase\n      const now = Math.floor(Date.now() / 1000)\n      if (now < combinedInfo.startTime) {\n        setCountdownTarget(combinedInfo.startTime)\n      } else if (now < combinedInfo.endTime) {\n        setCountdownTarget(combinedInfo.endTime)\n      }\n\n      console.log(\"Fetched Campaign Info:\", combinedInfo)\n\n      // Fetch proposals or candidates based on type\n      if (combinedInfo.votingType === 1 /* ProposalBased */) {\n        // Get all proposals\n        const proposalContents = []\n        const proposalVotes = []\n\n        for (let i = 0; i < combinedInfo.itemCount; i++) {\n          try {\n            const content = await contract.getProposalContent(campaignId, i)\n            const votes = await contract.getProposalVoteCount(campaignId, i)\n            proposalContents.push(content)\n            proposalVotes.push(Number(votes))\n          } catch (err) {\n            console.error(`Error fetching proposal ${i}:`, err)\n          }\n        }\n\n        const fetchedProposals = proposalContents.map((content, index) => ({\n          id: index,\n          content: content,\n          voteCount: proposalVotes[index],\n        }))\n\n        setProposals(fetchedProposals)\n        setCandidates([])\n        console.log(\"Fetched Proposals:\", fetchedProposals)\n      } else if (combinedInfo.votingType === 0 /* CandidateBased */) {\n        // Get all candidates\n        const fetchedCandidates = []\n\n        for (let i = 0; i < combinedInfo.itemCount; i++) {\n          try {\n            const [address, name, statement, imageHash, voteCount] = await contract.getCandidateInfo(campaignId, i)\n            fetchedCandidates.push({\n              id: i,\n              address: address,\n              name: name,\n              statement: statement,\n              imageHash: imageHash,\n              voteCount: Number(voteCount),\n            })\n          } catch (err) {\n            console.error(`Error fetching candidate ${i}:`, err)\n          }\n        }\n\n        setCandidates(fetchedCandidates)\n        setProposals([])\n        console.log(\"Fetched Candidates:\", fetchedCandidates)\n      }\n\n      // Fetch user-specific status if connected and not the owner\n      if (address && !isOwner) {\n        const hasVoted = await contract.hasUserVoted(campaignId, address)\n        const isRegistered = await contract.isUserRegistered(campaignId, address)\n        setUserHasVoted(hasVoted)\n        setUserIsRegistered(isRegistered)\n        console.log(`User Status: Voted=${hasVoted}, Registered=${isRegistered}`)\n      } else {\n        setUserHasVoted(false)\n        setUserIsRegistered(false)\n      }\n    } catch (err) {\n      console.error(\"Error fetching campaign data:\", err)\n      // Attempt to decode Solidity revert reason\n      let reason = \"Failed to load campaign details.\"\n      if (err.reason) {\n        reason = err.reason\n      } else if (err.data?.message) {\n        reason = err.data.message\n      } else if (err.message) {\n        reason = err.message\n      }\n      setError(reason.includes(\"Invalid campaign\") ? \"Campaign not found or ID is invalid.\" : reason)\n      setCampaignInfo(null)\n    } finally {\n      setLoading(false)\n    }\n  }, [contract, campaignId, address, campaignIdParam, isOwner])\n\n  // --- Effect to parse ID and trigger fetch ---\n  useEffect(() => {\n    if (campaignIdParam) {\n      try {\n        const idNumber = Number(campaignIdParam)\n        setCampaignId(idNumber)\n      } catch (e) {\n        setError(\"Invalid Campaign ID in URL.\")\n        setLoading(false)\n        setCampaignId(null)\n      }\n    } else {\n      setLoading(false)\n    }\n  }, [campaignIdParam])\n\n  useEffect(() => {\n    // Fetch data when contract is ready and campaignId is set\n    if (contract && campaignId) {\n      fetchCampaignData()\n    }\n  }, [contract, campaignId, fetchCampaignData])\n\n  // Countdown timer effect\n  useEffect(() => {\n    if (!countdownTarget) return\n\n    const updateCountdown = () => {\n      const remaining = getTimeRemaining(countdownTarget)\n      setTimeRemaining(remaining)\n\n      // If countdown finished, refresh data\n      const now = Math.floor(Date.now() / 1000)\n      if (now >= countdownTarget) {\n        fetchCampaignData()\n      }\n    }\n\n    updateCountdown()\n    const interval = setInterval(updateCountdown, 1000)\n    return () => clearInterval(interval)\n  }, [countdownTarget, fetchCampaignData])\n\n  // --- Render Logic ---\n  if (loading) {\n    return <LoadingState />\n  }\n\n  if (error) {\n    return <ErrorState error={error} />\n  }\n\n  if (!campaignInfo) {\n    return <NotFoundState />\n  }\n\n  // Derived state for easier conditional rendering\n  const now = Math.floor(Date.now() / 1000)\n  const isBeforeStart = now < campaignInfo.startTime\n  const isDuringVoting = now >= campaignInfo.startTime && now <= campaignInfo.endTime\n  const isAfterEnd = now > campaignInfo.endTime\n  const needsRegistration =\n    campaignInfo.restriction === 1 /* Limited */ || campaignInfo.restriction === 2 /* RequiredRegistration */\n  const canRegister = isBeforeStart && campaignInfo.status === 0 /* Created */\n  const canVote = isDuringVoting && campaignInfo.status === 1 /* Active */\n  const needsStatusUpdate =\n    (isDuringVoting && campaignInfo.status === 0) /* Created */ ||\n    (isAfterEnd && campaignInfo.status === 1) /* Active */\n\n  return (\n    <div className=\"container max-w-4xl mx-auto py-8 space-y-6 min-h-screen px-4\">\n      <CampaignHeader\n        campaignInfo={campaignInfo}\n        timeRemaining={timeRemaining}\n        isBeforeStart={isBeforeStart}\n        isDuringVoting={isDuringVoting}\n        needsStatusUpdate={needsStatusUpdate}\n        actionLoading={actionLoading}\n        actionError={actionError}\n        onUpdateStatus={fetchCampaignData}\n        campaignId={campaignId}\n        isOwner={isOwner}\n      />\n\n      {/* Owner Dashboard - Only visible to campaign creator */}\n      {isOwner && (\n        <OwnerDashboard\n          campaignInfo={campaignInfo}\n          proposals={proposals}\n          candidates={candidates}\n          isBeforeStart={isBeforeStart}\n          isDuringVoting={isDuringVoting}\n          isAfterEnd={isAfterEnd}\n          campaignId={campaignId}\n          onUpdate={fetchCampaignData}\n        />\n      )}\n\n      {/* Registration Section - Not shown to owner */}\n      {!isOwner && canRegister && needsRegistration && !userIsRegistered && (\n        <RegistrationSection\n          campaignInfo={campaignInfo}\n          actionLoading={actionLoading}\n          onRegister={fetchCampaignData}\n          campaignId={campaignId}\n        />\n      )}\n\n      {/* Candidate Registration Section - Not shown to owner */}\n      {!isOwner && canRegister && campaignInfo.votingType === 0 /* CandidateBased */ && (\n        <CandidateRegistration\n          campaignInfo={campaignInfo}\n          userIsRegistered={userIsRegistered}\n          actionLoading={actionLoading}\n          onRegister={fetchCampaignData}\n          campaignId={campaignId}\n        />\n      )}\n\n      {/* Voting Section - Not shown to owner */}\n      {!isOwner && canVote && (\n        <VotingSection\n          campaignInfo={campaignInfo}\n          proposals={proposals}\n          candidates={candidates}\n          isConnected={isConnected}\n          userIsRegistered={userIsRegistered}\n          userHasVoted={userHasVoted}\n          needsRegistration={needsRegistration}\n          actionLoading={actionLoading}\n          address={address}\n          onVote={fetchCampaignData}\n          campaignId={campaignId}\n        />\n      )}\n\n      {/* Results Section - Shown to everyone */}\n      {(isAfterEnd || campaignInfo.status === 2) /* Ended */ && (\n        <ResultsSection campaignInfo={campaignInfo} proposals={proposals} candidates={candidates} isOwner={isOwner} />\n      )}\n    </div>\n  )\n}\n\nexport default CampaignDetailPage\n\n"],"names":[],"mappings":"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","debugId":null}}]
}