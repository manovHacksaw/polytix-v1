{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props} />)\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}) {\n  return (\n    (<TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props} />)\n  );\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />)\n  );\n}\n\nfunction CardAction({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}) {\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props} />)\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    (<Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props} />)\n  );\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/skeleton.jsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}) {\n  return (\n    (<div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props} />)\n  );\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({\n  className,\n  type,\n  ...props\n}) {\n  return (\n    (<input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props} />)\n  );\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/components/ui/progress.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}) {\n  return (\n    (<ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}>\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }} />\n    </ProgressPrimitive.Root>)\n  );\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACJ;IACC,qBACG,8OAAC,oKAAA,CAAA,OAAsB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBACT,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAGlE","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/campaign-results.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { formatAddress, formatNumber, getChartColor } from \"@/lib/utils\"\nimport { ChartTabs, ChartTabsList, ChartTabsTrigger, ChartTabsContent } from \"@/components/ui/chart-tabs\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { motion } from \"framer-motion\"\nimport { \n  BarChart, \n  Bar, \n  PieChart, \n  Pie, \n  Cell, \n  ResponsiveContainer, \n  XAxis, \n  YAxis, \n  Tooltip, \n  Legend,\n  LineChart,\n  Line,\n  CartesianGrid\n} from \"recharts\"\n\nexport default function CampaignResults({ campaignId, contract, votingType, status }) {\n  const [loading, setLoading] = useState(true)\n  const [results, setResults] = useState([])\n  const [totalVotes, setTotalVotes] = useState(0)\n  const [historicalData, setHistoricalData] = useState([])\n  const [activeChartType, setActiveChartType] = useState(\"bar\")\n\n  useEffect(() => {\n    if (!contract || !campaignId) return\n\n    const fetchResults = async () => {\n      try {\n        setLoading(true)\n\n        let items = []\n        let total = 0\n        let historicalDataPoints = []\n\n        if (votingType === 0) {\n          // Candidate-based\n          const candidatesData = await contract.getCandidates(campaignId)\n\n          // Format candidate data\n          const candidates = []\n          for (let i = 0; i < candidatesData.addresses.length; i++) {\n            const lastVoteTimestamp = Number(candidatesData.lastVoteTimestamps[i])\n            const votes = Number(candidatesData.voteCounts[i])\n            \n            candidates.push({\n              id: i,\n              name: candidatesData.names[i],\n              address: candidatesData.addresses[i],\n              votes: votes,\n              lastVoteTimestamp: lastVoteTimestamp,\n              // Add properties for charts\n              label: candidatesData.names[i],\n              value: votes,\n            })\n            \n            total += votes\n            \n            // Add to historical data if timestamp exists\n            if (lastVoteTimestamp > 0) {\n              historicalDataPoints.push({\n                name: candidatesData.names[i],\n                timestamp: lastVoteTimestamp,\n                votes: votes\n              })\n            }\n          }\n\n          items = candidates\n        } else {\n          // Proposal-based\n          const proposalsData = await contract.getProposals(campaignId)\n\n          // Format proposal data\n          const proposals = []\n          for (let i = 0; i < proposalsData.contents.length; i++) {\n            const content = proposalsData.contents[i]\n            const votes = Number(proposalsData.voteCounts[i])\n            \n            proposals.push({\n              id: i,\n              content: content,\n              votes: votes,\n              // Add properties for charts\n              name: `Proposal ${i + 1}`,\n              label: `Proposal ${i + 1}`,\n              value: votes,\n            })\n            \n            total += votes\n          }\n\n          items = proposals\n        }\n\n        // Sort by votes (descending)\n        items.sort((a, b) => b.votes - a.votes)\n\n        // Process historical data if available\n        if (historicalDataPoints.length > 0) {\n          // Sort by timestamp\n          historicalDataPoints.sort((a, b) => a.timestamp - b.timestamp)\n          \n          // Group by name and create time series\n          const candidateGroups = {}\n          \n          historicalDataPoints.forEach(point => {\n            if (!candidateGroups[point.name]) {\n              candidateGroups[point.name] = []\n            }\n            \n            const date = new Date(point.timestamp * 1000)\n            candidateGroups[point.name].push({\n              timestamp: point.timestamp,\n              date: date.toLocaleDateString(),\n              votes: point.votes,\n              name: point.name\n            })\n          })\n          \n          // Convert to array format for recharts\n          const timeSeriesData = []\n          Object.keys(candidateGroups).forEach(name => {\n            candidateGroups[name].forEach(point => {\n              const existingPoint = timeSeriesData.find(p => p.date === point.date)\n              if (existingPoint) {\n                existingPoint[name] = point.votes\n              } else {\n                const newPoint = { date: point.date }\n                newPoint[name] = point.votes\n                timeSeriesData.push(newPoint)\n              }\n            })\n          })\n          \n          setHistoricalData(timeSeriesData)\n        }\n\n        setResults(items)\n        setTotalVotes(total)\n      } catch (error) {\n        console.error(\"Error fetching results:\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchResults()\n  }, [contract, campaignId, votingType])\n\n  // Custom tooltip for recharts\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-popover border border-border p-3 rounded-md shadow-md\">\n          <p className=\"font-medium\">{payload[0].name || label}</p>\n          <p className=\"text-sm\">\n            Votes: <span className=\"font-medium\">{formatNumber(payload[0].value)}</span>\n          </p>\n          {totalVotes > 0 && (\n            <p className=\"text-xs text-muted-foreground\">\n              {Math.round((payload[0].value / totalVotes) * 100)}% of total\n            </p>\n          )}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-8 w-48 mb-2\" />\n        <Skeleton className=\"h-64 w-full\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <Skeleton className=\"h-20 w-full\" />\n          <Skeleton className=\"h-20 w-full\" />\n        </div>\n      </div>\n    )\n  }\n\n  if (results.length === 0) {\n    return <p className=\"text-center py-8 text-muted-foreground\">No results available yet.</p>\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold\">\n          {status === 2 ? \"Final Results\" : \"Current Standing\"}\n          <span className=\"ml-2 text-sm font-normal text-muted-foreground\">\n            {formatNumber(totalVotes)} total votes\n          </span>\n        </h3>\n        <ChartTabs value={activeChartType} onValueChange={setActiveChartType}>\n          <ChartTabsList className=\"grid grid-cols-3 w-auto\">\n            <ChartTabsTrigger value=\"bar\">Bar</ChartTabsTrigger>\n            <ChartTabsTrigger value=\"pie\">Pie</ChartTabsTrigger>\n            <ChartTabsTrigger value=\"line\">Trend</ChartTabsTrigger>\n          </ChartTabsList>\n        </ChartTabs>\n      </div>\n\n      <ChartTabs value={activeChartType} onValueChange={setActiveChartType}>\n        <ChartTabsContent value=\"bar\" className=\"mt-4\">\n          <div className=\"h-64 md:h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={results}\n                margin={{ top: 5, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                <XAxis \n                  dataKey={votingType === 0 ? \"name\" : \"name\"}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={70}\n                  tick={{ fill: \"hsl(var(--muted-foreground))\" }}\n                />\n                <YAxis tick={{ fill: \"hsl(var(--muted-foreground))\" }} />\n                <Tooltip content={<CustomTooltip />} />\n                <Bar dataKey=\"votes\" name=\"Votes\">\n                  {results.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={getChartColor(index)} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </ChartTabsContent>\n\n        <ChartTabsContent value=\"pie\" className=\"mt-4\">\n          <div className=\"h-64 md:h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={results}\n                  dataKey=\"votes\"\n                  nameKey={votingType === 0 ? \"name\" : \"name\"}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius=\"80%\"\n                  innerRadius=\"40%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                >\n                  {results.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={getChartColor(index)} />\n                  ))}\n                </Pie>\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </ChartTabsContent>\n\n        <ChartTabsContent value=\"line\" className=\"mt-4\">\n          {historicalData.length > 0 ? (\n            <div className=\"h-64 md:h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  data={historicalData}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    tick={{ fill: \"hsl(var(--muted-foreground))\" }}\n                  />\n                  <YAxis tick={{ fill: \"hsl(var(--muted-foreground))\" }} />\n                  <Tooltip />\n                  <Legend />\n                  {results.map((result, index) => (\n                    <Line\n                      key={index}\n                      type=\"monotone\"\n                      dataKey={result.name}\n                      stroke={getChartColor(index)}\n                      activeDot={{ r: 8 }}\n                    />\n                  ))}\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-64 text-center\">\n              <p className=\"text-muted-foreground\">Historical data not available</p>\n              <p className=\"text-sm text-muted-foreground\">Vote trend will appear as more votes are cast</p>\n            </div>\n          )}\n        </ChartTabsContent>\n      </ChartTabs>\n\n      <div className=\"space-y-4 mt-8\">\n        <h3 className=\"text-lg font-semibold mb-2\">Detailed Results</h3>\n        {results.map((item, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: index * 0.1 }}\n          >\n            <Card className={index === 0 && status === 2 ? \"border-primary\" : \"\"}>\n              <CardContent className=\"pt-6\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <div className=\"flex items-center gap-2\">\n                      <h3 className=\"font-medium\">\n                        {votingType === 0 ? item.name : `Proposal ${item.id + 1}`}\n                      </h3>\n                      {index === 0 && status === 2 && (\n                        <Badge variant=\"default\" className=\"bg-primary\">Winner</Badge>\n                      )}\n                    </div>\n                    {votingType === 0 && <p className=\"text-sm text-muted-foreground\">{formatAddress(item.address)}</p>}\n                    {votingType === 1 && (\n                      <p className=\"text-sm text-muted-foreground line-clamp-2 mt-1\">{item.content}</p>\n                    )}\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-lg font-bold\">{formatNumber(item.votes)}</span>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {totalVotes > 0 ? Math.round((item.votes / totalVotes) * 100) : 0}%\n                    </p>\n                  </div>\n                </div>\n                <Progress \n                  value={totalVotes > 0 ? (item.votes / totalVotes) * 100 : 0} \n                  className=\"h-2\" \n                  indicatorClassName={`bg-[${getChartColor(index)}]`}\n                />\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/candidate-list.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { formatAddress } from \"@/lib/utils\"\n\n\n\nexport default function CandidateList({ campaignId, contract, onVote, loading: parentLoading }) {\n  const [loading, setLoading] = useState(true)\n  const [candidates, setCandidates] = useState([])\n\n  useEffect(() => {\n    if (!contract || !campaignId) return\n\n    const fetchCandidates = async () => {\n      try {\n        setLoading(true)\n\n        const candidatesData = await contract.getCandidates(campaignId)\n\n        // Format candidate data\n        const formattedCandidates = []\n        for (let i = 0; i < candidatesData.addresses.length; i++) {\n          formattedCandidates.push({\n            id: i,\n            name: candidatesData.names[i],\n            address: candidatesData.addresses[i],\n          })\n        }\n\n        setCandidates(formattedCandidates)\n      } catch (error) {\n        console.error(\"Error fetching candidates:\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchCandidates()\n  }, [contract, campaignId])\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n      </div>\n    )\n  }\n\n  if (candidates.length === 0) {\n    return <p>No candidates available.</p>\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {candidates.map((candidate) => (\n        <Card key={candidate.id}>\n          <CardContent className=\"pt-6\">\n            <h3 className=\"text-lg font-medium\">{candidate.name}</h3>\n            <p className=\"text-sm text-muted-foreground\">{formatAddress(candidate.address)}</p>\n          </CardContent>\n          <CardFooter>\n            <Button onClick={() => onVote(candidate.id)} disabled={parentLoading} className=\"w-full\">\n              Vote for {candidate.name}\n            </Button>\n          </CardFooter>\n        </Card>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAUe,SAAS,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,aAAa,EAAE;IAC5F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,YAAY,CAAC,YAAY;QAE9B,MAAM,kBAAkB;YACtB,IAAI;gBACF,WAAW;gBAEX,MAAM,iBAAiB,MAAM,SAAS,aAAa,CAAC;gBAEpD,wBAAwB;gBACxB,MAAM,sBAAsB,EAAE;gBAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,SAAS,CAAC,MAAM,EAAE,IAAK;oBACxD,oBAAoB,IAAI,CAAC;wBACvB,IAAI;wBACJ,MAAM,eAAe,KAAK,CAAC,EAAE;wBAC7B,SAAS,eAAe,SAAS,CAAC,EAAE;oBACtC;gBACF;gBAEA,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;YAC9C,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;QAAU;KAAW;IAEzB,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG1B;IAEA,IAAI,WAAW,MAAM,KAAK,GAAG;QAC3B,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,WAAW,GAAG,CAAC,CAAC,0BACf,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;gCAAG,WAAU;0CAAuB,UAAU,IAAI;;;;;;0CACnD,8OAAC;gCAAE,WAAU;0CAAiC,CAAA,GAAA,4GAAA,CAAA,gBAAa,AAAD,EAAE,UAAU,OAAO;;;;;;;;;;;;kCAE/E,8OAAC,yHAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAS,IAAM,OAAO,UAAU,EAAE;4BAAG,UAAU;4BAAe,WAAU;;gCAAS;gCAC7E,UAAU,IAAI;;;;;;;;;;;;;eAPnB,UAAU,EAAE;;;;;;;;;;AAc/B","debugId":null}},
    {"offset": {"line": 1251, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/proposal-list.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\n\n\nexport default function ProposalList({ campaignId, contract, onVote, loading: parentLoading }) {\n  const [loading, setLoading] = useState(true)\n  const [proposals, setProposals] = useState([])\n\n  useEffect(() => {\n    if (!contract || !campaignId) return\n\n    const fetchProposals = async () => {\n      try {\n        setLoading(true)\n\n        const proposalsData = await contract.getProposals(campaignId)\n\n        // Format proposal data\n        const formattedProposals = []\n        for (let i = 0; i < proposalsData.contents.length; i++) {\n          formattedProposals.push({\n            id: i,\n            content: proposalsData.contents[i],\n          })\n        }\n\n        setProposals(formattedProposals)\n      } catch (error) {\n        console.error(\"Error fetching proposals:\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchProposals()\n  }, [contract, campaignId])\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n      </div>\n    )\n  }\n\n  if (proposals.length === 0) {\n    return <p>No proposals available.</p>\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {proposals.map((proposal) => (\n        <Card key={proposal.id}>\n          <CardContent className=\"pt-6\">\n            <h3 className=\"text-lg font-medium\">Proposal {proposal.id + 1}</h3>\n            <p className=\"text-sm\">{proposal.content}</p>\n          </CardContent>\n          <CardFooter>\n            <Button onClick={() => onVote(proposal.id)} disabled={parentLoading} className=\"w-full\">\n              Vote for this proposal\n            </Button>\n          </CardFooter>\n        </Card>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAQe,SAAS,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,aAAa,EAAE;IAC3F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,YAAY,CAAC,YAAY;QAE9B,MAAM,iBAAiB;YACrB,IAAI;gBACF,WAAW;gBAEX,MAAM,gBAAgB,MAAM,SAAS,YAAY,CAAC;gBAElD,uBAAuB;gBACvB,MAAM,qBAAqB,EAAE;gBAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,QAAQ,CAAC,MAAM,EAAE,IAAK;oBACtD,mBAAmB,IAAI,CAAC;wBACtB,IAAI;wBACJ,SAAS,cAAc,QAAQ,CAAC,EAAE;oBACpC;gBACF;gBAEA,aAAa;YACf,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;QAAU;KAAW;IAEzB,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,8OAAC,6HAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG1B;IAEA,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;gCAAG,WAAU;;oCAAsB;oCAAU,SAAS,EAAE,GAAG;;;;;;;0CAC5D,8OAAC;gCAAE,WAAU;0CAAW,SAAS,OAAO;;;;;;;;;;;;kCAE1C,8OAAC,yHAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAS,IAAM,OAAO,SAAS,EAAE;4BAAG,UAAU;4BAAe,WAAU;sCAAS;;;;;;;;;;;;eANjF,SAAS,EAAE;;;;;;;;;;AAc9B","debugId":null}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/countdown-timer.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { getTimeRemaining } from \"@/lib/utils\"\n\n\nexport default function CountdownTimer({ targetTime }) {\n  const [timeLeft, setTimeLeft] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 })\n\n  useEffect(() => {\n    const updateTimer = () => {\n      const remaining = getTimeRemaining(targetTime)\n      setTimeLeft(remaining)\n    }\n\n    // Update immediately\n    updateTimer()\n\n    // Then update every second\n    const interval = setInterval(updateTimer, 1000)\n\n    return () => clearInterval(interval)\n  }, [targetTime])\n\n  return (\n    <div className=\"flex gap-4 justify-center md:justify-start\">\n      <div className=\"text-center\">\n        <div className=\"text-3xl font-bold\">{timeLeft.days}</div>\n        <div className=\"text-xs uppercase text-muted-foreground\">Days</div>\n      </div>\n      <div className=\"text-center\">\n        <div className=\"text-3xl font-bold\">{timeLeft.hours}</div>\n        <div className=\"text-xs uppercase text-muted-foreground\">Hours</div>\n      </div>\n      <div className=\"text-center\">\n        <div className=\"text-3xl font-bold\">{timeLeft.minutes}</div>\n        <div className=\"text-xs uppercase text-muted-foreground\">Minutes</div>\n      </div>\n      <div className=\"text-center\">\n        <div className=\"text-3xl font-bold\">{timeLeft.seconds}</div>\n        <div className=\"text-xs uppercase text-muted-foreground\">Seconds</div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMe,SAAS,eAAe,EAAE,UAAU,EAAE;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAG,OAAO;QAAG,SAAS;QAAG,SAAS;IAAE;IAErF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,MAAM,YAAY,CAAA,GAAA,4GAAA,CAAA,mBAAgB,AAAD,EAAE;YACnC,YAAY;QACd;QAEA,qBAAqB;QACrB;QAEA,2BAA2B;QAC3B,MAAM,WAAW,YAAY,aAAa;QAE1C,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAW;IAEf,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAsB,SAAS,IAAI;;;;;;kCAClD,8OAAC;wBAAI,WAAU;kCAA0C;;;;;;;;;;;;0BAE3D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAsB,SAAS,KAAK;;;;;;kCACnD,8OAAC;wBAAI,WAAU;kCAA0C;;;;;;;;;;;;0BAE3D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAsB,SAAS,OAAO;;;;;;kCACrD,8OAAC;wBAAI,WAAU;kCAA0C;;;;;;;;;;;;0BAE3D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAsB,SAAS,OAAO;;;;;;kCACrD,8OAAC;wBAAI,WAAU;kCAA0C;;;;;;;;;;;;;;;;;;AAIjE","debugId":null}},
    {"offset": {"line": 1547, "column": 0}, "map": {"version":3,"sources":["file:///mnt/windows_d/manov/code/polytix-v1/app/campaigns/%5Bid%5D/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"next/navigation\"\nimport { useContract } from \"@/context/contract-context\"\nimport { useSubgraph } from \"@/context/graphql/queries\" \nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { Input } from \"@/components/ui/input\"\nimport { toast } from \"sonner\"\nimport { formatTimestamp, getStatusText, getRestrictionText, getVotingTypeText, getResultTypeText } from \"@/lib/utils\"\nimport CampaignResults from \"./campaign-results\"\nimport CandidateList from \"./candidate-list\"\nimport ProposalList from \"./proposal-list\"\nimport CountdownTimer from \"./countdown-timer\"\n\nexport default function CampaignDetailsPage() {\n  const params = useParams()\n  const campaignId = params.id ? Number(params.id) : 0\n  const { contract, address, isConnected } = useContract()\n  const { events, loading: subgraphLoading } = useSubgraph()\n\n  // Campaign data states\n  const [loading, setLoading] = useState(true)\n  const [campaignInfo, setCampaignInfo] = useState(null)\n  const [campaignStats, setCampaignStats] = useState(null)\n  const [campaignTimeInfo, setCampaignTimeInfo] = useState(null)\n  const [userRegistrationType, setUserRegistrationType] = useState(null)\n  const [hasVoted, setHasVoted] = useState(false)\n  const [activeTab, setActiveTab] = useState(\"info\")\n  const [passKey, setPassKey] = useState(\"\")\n\n  // Fetch campaign data\n  useEffect(() => {\n    if (!contract || !campaignId) return\n\n    const fetchCampaignData = async () => {\n      try {\n        setLoading(true)\n\n        // Fetch basic campaign info\n        const info = await contract.getCampaignBasicInfo(campaignId)\n        setCampaignInfo({\n          votingType: Number(info.votingType),\n          restriction: Number(info.restriction),\n          resultType: Number(info.resultType),\n          creator: info.creator,\n          description: info.description,\n        })\n\n        // Fetch campaign stats\n        const stats = await contract.getCampaignStats(campaignId)\n        setCampaignStats({\n          totalVotes: Number(stats.totalVotes),\n          itemCount: Number(stats.itemCount),\n          registeredVoterCount: Number(stats.registeredVoterCount),\n        })\n\n        // Fetch campaign time info\n        const timeInfo = await contract.getCampaignTimeInfo(campaignId)\n        setCampaignTimeInfo({\n          status: Number(timeInfo.status),\n          startTime: timeInfo.startTime,\n          endTime: timeInfo.endTime,\n        })\n\n        // Check if user is registered and has voted\n        if (isConnected && address) {\n          const regType = await contract.getUserRegistrationType(campaignId, address)\n          setUserRegistrationType(Number(regType))\n\n          const voted = await contract.hasUserVoted(campaignId, address)\n          setHasVoted(voted)\n        }\n\n        // Set initial active tab based on campaign status and user role\n        setInitialActiveTab()\n      } catch (error) {\n        console.error(\"Error fetching campaign data:\", error)\n        toast.error(\"Failed to load campaign data\")\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchCampaignData()\n  }, [contract, campaignId, address, isConnected])\n\n  // Set initial active tab based on campaign status and user role\n  const setInitialActiveTab = () => {\n    if (!campaignInfo || !campaignTimeInfo) return\n\n    const isCreator = address && campaignInfo.creator.toLowerCase() === address.toLowerCase()\n    const now = Math.floor(Date.now() / 1000)\n    const startTime = Number(campaignTimeInfo.startTime)\n    const endTime = Number(campaignTimeInfo.endTime)\n\n    if (isCreator) {\n      // Creator always sees results\n      setActiveTab(\"results\")\n    } else if (now < startTime) {\n      // Before campaign starts\n      if (campaignInfo.restriction !== 0) {\n        // Not Open\n        setActiveTab(\"register\")\n      } else {\n        setActiveTab(\"info\")\n      }\n    } else if (now >= startTime && now < endTime) {\n      // During voting period\n      if (userRegistrationType > 0) {\n        setActiveTab(\"vote\")\n      } else {\n        setActiveTab(\"info\")\n      }\n    } else {\n      // After campaign ends\n      setActiveTab(\"results\")\n    }\n  }\n\n  // Check if user can vote\n  const canVote = () => {\n    if (!campaignTimeInfo || !isConnected) return false\n\n    const now = Math.floor(Date.now() / 1000)\n    const startTime = Number(campaignTimeInfo.startTime)\n    const endTime = Number(campaignTimeInfo.endTime)\n\n    return now >= startTime && now < endTime && userRegistrationType > 0 && !hasVoted\n  }\n\n  // Check if user can register\n  const canRegister = () => {\n    if (!campaignTimeInfo || !campaignInfo || !isConnected) return false\n\n    const now = Math.floor(Date.now() / 1000)\n    const startTime = Number(campaignTimeInfo.startTime)\n\n    return (\n      now < startTime &&\n      campaignInfo.restriction !== 0 && // Not Open\n      userRegistrationType === 0 // Not registered\n    )\n  }\n\n  // Handle vote casting\n  const handleVote = async (itemId) => {\n    if (!contract || !isConnected) {\n      toast.error(\"Please connect your wallet\")\n      return\n    }\n\n    try {\n      setLoading(true)\n\n      let tx\n      if (campaignInfo.votingType === 0) {\n        // Candidate-based\n        tx = await contract.voteForCandidate(campaignId, itemId)\n      } else {\n        // Proposal-based\n        tx = await contract.voteForProposal(campaignId, itemId)\n      }\n\n      await tx.wait()\n      setHasVoted(true)\n      toast.success(\"Vote cast successfully!\")\n\n      // Refresh campaign stats\n      const stats = await contract.getCampaignStats(campaignId)\n      setCampaignStats({\n        totalVotes: Number(stats.totalVotes),\n        itemCount: Number(stats.itemCount),\n        registeredVoterCount: Number(stats.registeredVoterCount),\n      })\n\n      setActiveTab(\"results\")\n    } catch (error) {\n      console.error(\"Error casting vote:\", error)\n      toast.error(\"Failed to cast vote\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Handle registration\n  const handleRegister = async () => {\n    if (!contract || !isConnected) {\n      toast.error(\"Please connect your wallet\")\n      return\n    }\n\n    if (!passKey && campaignInfo.restriction === 2) {\n      // Registration Required\n      toast.error(\"Please enter the pass key\")\n      return\n    }\n\n    try {\n      setLoading(true)\n\n      const tx = await contract.registerToVote(campaignId, passKey)\n      await tx.wait()\n\n      const regType = await contract.getUserRegistrationType(campaignId, address)\n      setUserRegistrationType(Number(regType))\n\n      toast.success(\"Registration successful!\")\n\n      // Refresh campaign stats\n      const stats = await contract.getCampaignStats(campaignId)\n      setCampaignStats({\n        totalVotes: Number(stats.totalVotes),\n        itemCount: Number(stats.itemCount),\n        registeredVoterCount: Number(stats.registeredVoterCount),\n      })\n\n      setActiveTab(\"info\")\n    } catch (error) {\n      console.error(\"Error registering:\", error)\n      toast.error(\"Failed to register\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (loading || !campaignInfo || !campaignTimeInfo) {\n    return (\n      <div className=\"container mx-auto py-8 px-4\">\n        <div className=\"space-y-4\">\n          <Skeleton className=\"h-12 w-3/4\" />\n          <Skeleton className=\"h-6 w-1/2\" />\n          <Skeleton className=\"h-64 w-full\" />\n        </div>\n      </div>\n    )\n  }\n\n  const isCreator = address && campaignInfo.creator.toLowerCase() === address.toLowerCase()\n  const now = Math.floor(Date.now() / 1000)\n  const startTime = Number(campaignTimeInfo.startTime)\n  const endTime = Number(campaignTimeInfo.endTime)\n\n  // Determine countdown message\n  let countdownMessage = \"\"\n  let targetTime = 0\n\n  if (now < startTime) {\n    countdownMessage = \"Voting starts in:\"\n    targetTime = startTime\n  } else if (now < endTime) {\n    countdownMessage = \"Voting ends in:\"\n    targetTime = endTime\n  } else {\n    countdownMessage = \"Campaign ended\"\n  }\n\n  return (\n    <div className=\"container mx-auto py-8 px-4\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold capitalize mb-2\">{campaignInfo.description}</h1>\n\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <Badge variant=\"outline\">{getStatusText(campaignTimeInfo.status)}</Badge>\n          <Badge variant=\"outline\">{getVotingTypeText(campaignInfo.votingType)}</Badge>\n          <Badge variant=\"outline\">{getRestrictionText(campaignInfo.restriction)}</Badge>\n          <Badge variant=\"outline\">{getResultTypeText(campaignInfo.resultType)}</Badge>\n        </div>\n\n        <div className=\"bg-muted p-4 rounded-lg\">\n          <h2 className=\"text-lg font-medium mb-2\">{countdownMessage}</h2>\n          {now < endTime ? <CountdownTimer targetTime={targetTime} /> : <p>Final results are available</p>}\n        </div>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"info\">Info</TabsTrigger>\n          {canRegister() && <TabsTrigger value=\"register\">Register</TabsTrigger>}\n          {canVote() && <TabsTrigger value=\"vote\">Vote</TabsTrigger>}\n          <TabsTrigger value=\"results\">Results</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"info\" className=\"mt-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Campaign Information</CardTitle>\n              <CardDescription>Created by {campaignInfo.creator}</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-medium\">Time Frame</h3>\n                <p>Start: {formatTimestamp(campaignTimeInfo.startTime)}</p>\n                <p>End: {formatTimestamp(campaignTimeInfo.endTime)}</p>\n              </div>\n\n              <div>\n                <h3 className=\"font-medium\">Statistics</h3>\n                <p>Total Votes: {campaignStats?.totalVotes || 0}</p>\n                <p>Registered Voters: {campaignStats?.registeredVoterCount || 0}</p>\n                <p>\n                  {campaignInfo.votingType === 0\n                    ? `Candidates: ${campaignStats?.itemCount || 0}`\n                    : `Proposals: ${campaignStats?.itemCount || 0}`}\n                </p>\n              </div>\n\n              {isConnected && (\n                <div>\n                  <h3 className=\"font-medium\">Your Status</h3>\n                  <p>\n                    {userRegistrationType > 0\n                      ? `Registered as: ${userRegistrationType === 1 ? \"Voter\" : \"Candidate\"}`\n                      : \"Not registered\"}\n                  </p>\n                  <p>{hasVoted ? \"You have voted\" : \"You have not voted yet\"}</p>\n                </div>\n              )}\n            </CardContent>\n            <CardFooter>\n              {!isConnected && <p className=\"text-muted-foreground\">Connect your wallet to participate</p>}\n            </CardFooter>\n          </Card>\n        </TabsContent>\n\n        {canRegister() && (\n          <TabsContent value=\"register\" className=\"mt-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Register to Vote</CardTitle>\n                <CardDescription>Register to participate in this campaign</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {campaignInfo.restriction === 2 && (\n                  <div className=\"mb-4\">\n                    <label className=\"block text-sm font-medium mb-1\">Pass Key</label>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Enter pass key\"\n                      value={passKey}\n                      onChange={(e) => setPassKey(e.target.value)}\n                    />\n                  </div>\n                )}\n                <p className=\"text-sm text-muted-foreground mb-4\">\n                  By registering, you will receive an NFT that represents your voting right.\n                </p>\n              </CardContent>\n              <CardFooter>\n                <Button onClick={handleRegister} disabled={loading}>\n                  {loading ? \"Registering...\" : \"Register\"}\n                </Button>\n              </CardFooter>\n            </Card>\n          </TabsContent>\n        )}\n\n        {canVote() && (\n          <TabsContent value=\"vote\" className=\"mt-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Cast Your Vote</CardTitle>\n                <CardDescription>Select an option to vote</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {campaignInfo.votingType === 0 ? (\n                  <CandidateList campaignId={campaignId} contract={contract} onVote={handleVote} loading={loading} />\n                ) : (\n                  <ProposalList campaignId={campaignId} contract={contract} onVote={handleVote} loading={loading} />\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        )}\n\n        <TabsContent value=\"results\" className=\"mt-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Results</CardTitle>\n              <CardDescription>{campaignTimeInfo.status === 2 ? \"Final results\" : \"Current standings\"}</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <CampaignResults\n                campaignId={campaignId}\n                contract={contract}\n                votingType={campaignInfo.votingType}\n                status={campaignTimeInfo.status}\n              />\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}