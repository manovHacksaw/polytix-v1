type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BaseImageURISet @entity(immutable: true) {
  id: Bytes!
  newURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CampaignCreated @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  creator: Bytes! # address
  votingType: Int! # uint8
  restriction: Int! # uint8
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CampaignStatusChanged @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CandidateAdded @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  candidateId: BigInt! # uint256
  candidateAddress: Bytes! # address
  name: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CandidateImageURISet @entity(immutable: true) {
  id: Bytes!
  newURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CandidateRegistered @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  candidate: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractPaused @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractUnpaused @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NFTBurned @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  voter: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NotificationCreated @entity(immutable: true) {
  id: Bytes!
  internal_id: BigInt! # uint256
  userAddress: Bytes! # address
  campaignId: BigInt! # uint256
  notificationType: Int! # uint8
  timestamp: BigInt! # uint256
  relatedEntityId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalAdded @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  proposalId: BigInt! # uint256
  content: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCapReached @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  totalVotes: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCast @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  voter: Bytes! # address
  targetId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoterRegistered @entity(immutable: true) {
  id: Bytes!
  campaignId: BigInt! # uint256
  voter: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
